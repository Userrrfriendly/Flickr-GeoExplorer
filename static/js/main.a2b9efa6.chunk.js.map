{"version":3,"sources":["assets/pngLogo.png","assets/SLIDE1.png","assets/SLIDE2.png","assets/SLIDE3.png","requests/flikr.js","context/stateContext.js","context/dispatchContext.js","context/QueryContext/queryContext.js","context/rootReducer.js","context/QueryContext/dispatchQueryContext.js","context/QueryContext/queryReducer.js","components/controlPanel/requestsNumberSlider.js","components/controlPanel/selectSortingMethod.js","components/controlPanel/textQuery.js","components/controlPanel/datePickers/minUploadDatePicker.js","components/controlPanel/datePickers/maxUploadDatePicker.js","components/controlPanel/datePickers/minTakenDatePicker.js","components/controlPanel/datePickers/maxTakenDatePicker.js","components/controlPanel/switches/customSwitch.js","components/drawer/drawer.js","helpers/CustomHooks/useMinScreenWidth.js","components/appBar/appBar.js","components/imageWrapper/imageWrapper.js","components/imageWrapper/imageMenu.js","components/imageGrid/imageGrid.js","components/controls/loadMoreBtn.js","components/LoadingBar/loadingBar.js","components/controlPanel/geoCodingBar/geoCodingBar.js","components/controlPanel/expansionPanels.js","components/controlPanel/controlPanel.js","components/controlPanel/controlPanelMobile.js","components/favorites/FavoritesDialog.js","helpers/helpers.js","components/lightboxComponents/lightboxHeader.js","components/lightboxComponents/lightboxViewRenderer.js","components/toast/toast.js","components/CarouselShowCase/carouselShowCase.js","App.js","serviceWorker.js","index.js","context/store.js","context/QueryContext/queryStore.js"],"names":["module","exports","getPhotosByTitle","searchParams","query","console","log","url","URLSearchParams","append","searchText","sortMethod","minUploadDate","maxUploadDate","minTakenDate","maxTakenDate","searchMethod","bounds","south","west","north","east","toFixed","lat","lng","radius","resultsPerPage","page","fetch","then","res","json","stat","currentPage","photos","totalPages","pages","totalPhotos","total","perPage","perpage","photo","map","img","dateupload","datetaken","ownername","geolocation","parseFloat","latitude","longitude","photoId","id","width_t","parseInt","width_c","width_h","width_l","width_m","width_o","height_c","height_h","height_l","height_m","height_o","height","width","src","url_l","url_m","url_o","title","alt","key","owner","thumb","url_t","srcSet","url_c","url_h","sizes","catch","err","message","code","StateContext","React","createContext","DispatchContext","QueryContext","SET_USER_LOCATION","SET_PHOTOS","UPDATE_PHOTOS","BLOCK_USER","ADD_IMG_TO_FAVORITES","REMOVE_IMG_FROM_FAVORITES","SET_MAP_LOADED","MAKE_TOAST","rootReducer","state","action","type","userLocation","setUserLocation","filteredPhotos","favorites","length","find","el","isFavorite","blockedUsers","hiddenPhotos","setPhotos","newPhotosFiltered","filter","includes","newHiddenPhotos","concat","updatePhotos","updatedBlockedUsers","userId","blockUser","image","addImgToFavorites","filteredIndex","findIndex","index","splice","removeImgFromFavorites","mapLoaded","setMapLoaded","toast","variant","triggerToast","DispatchQueryContext","SET_MIN_UPLOAD_DATE","SET_MAX_UPLOAD_DATE","SET_MIN_TAKEN_DATE","SET_MAX_TAKEN_DATE","SET_MAX_RESULTS_PER_PAGE","SET_SEARCH_METHOD_SORTING","SET_SEARCH_TEXT","queryReducer","setResultsPerPage","setMinUploadDate","setMaxUploadDate","setMinTakenDate","setMaxTakenDate","payload","setSearchMethodSorting","setSearchText","useStyles","makeStyles","root","display","alignItems","justifyContent","input","marginLeft","marginBottom","maxWidth","RequestNumberSlider","props","classes","store","useContext","dispatch","Typography","align","gutterBottom","className","Slider","value","onChange","event","newValue","aria-labelledby","step","min","max","style","marginRight","Input","margin","val","target","Number","isNaN","onBlur","Math","trunc","inputProps","theme","formControl","root_select","textAlign","SelectSortingMethod","FormControl","InputLabel","htmlFor","Select","MenuItem","FormHelperText","TextQuery","handleSubmit","e","preventDefault","searchFlikr","onSubmit","fullWidth","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","Close","MinUploadDatePicker","useState","Date","placeholderDate","setPlaceholderDate","checked","selectedDate","utils","DateFnsUtils","DatePicker","minDate","disabled","label","format","date","Checkbox","alignSelf","color","MaxUploadDatePicker","MinTakenDatePicker","MaxTakenDatePicker","handleDateChange","SwitchButton","FormGroup","row","FormControlLabel","control","Switch","callback","list","fullList","hamburger","withRouter","openQueryOption","setOpenQueryOptions","handleQueryOptionsClick","openMapOptions","setOpenMapOptions","handleMapOptionsClick","drawerOpen","setDrawerOpen","closeDrawer","history","goBack","useEffect","window","onpopstate","push","size","MenuRounded","fontSize","Drawer","open","onClose","role","List","ChevronLeft","Divider","ListItem","button","ListItemIcon","Ballot","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","flexFlow","divider","Map","togglePhotoMarkerDisplay","displayPhotoMarkers","toggleFavorites","displayFavorites","Button","marginTop","handleMyLocationClick","MyLocationTwoTone","useMinScreenWidth","width450","useMediaQuery","width900","width1200","bottom","spacing","right","grow","flexGrow","icons_container","logo_container","cursor","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","appBarHide","children","ScrollTop","disableHysteresis","threshold","Zoom","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","HideAppBar","smSceen","location","Fragment","CssBaseline","AppBar","Toolbar","disableGutters","PngLogo","Tooltip","gridDirection","toggleGridDirection","control_icon","handleOpenFavorites","Favorite","Box","Fab","KeyboardArrowUp","pin_to_map_btn","left","backgroundColor","boxShadow","options_btn","top","memo","imageToggleFavorites","openLightbox","handleOpenMenuClick","hover","setHover","useMemo","cont","overflow","container","onMouseEnter","bind","onMouseLeave","onTouchStart","setTimeout","heigth","call","MoreVert","FavoriteBorder","linkStyle","ImageMenu","Menu","anchorEl","keepMounted","Boolean","handleMenuClose","openFavorites","photoData","Link","href","responseDetails","setAnchorEl","setPhotoData","data","currentTarget","imageRenderer","useCallback","renderImage","LoadMoreButton","LoadingBar","LinearProgress","padding","border","flex","iconButton","form","LocationSearch","autoCompleteInputRef","useRef","geocoder","current","google","maps","Geocoder","autocomplete","fillInInput","geocodeAddress","resultsMap","geocode","address","results","status","fitBounds","geometry","viewport","alert","places","Autocomplete","setFields","addListener","Paper","elevation","InputBase","inputRef","defaultValue","orientation","Search","heading","typography","pxToRem","fontWeight","fontWeightRegular","details_root","details_root_geolocation","ExpansionPanels","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","requestOptions","mapOptions","panel","overflowY","panel_item","wrapper","search_photos_box","map_options_container","queryStore","ImageSearchRounded","loadingPhotos","search_btn_box","ControlPanelMobile","appBar","direction_btn","Transition","forwardRef","ref","setGridDirection","pathname","handleCloseFavorites","Dialog","fullScreen","TransitionComponent","edge","mapReady","cb","waitingThreshold","timer","setInterval","stopTimer","clearInterval","header_container","zIndex","transition","opacity","lightbox_btn","background","hide_on_idle","LightBoxHeader","currentView","isModal","interactionIsIdle","carouselProps","btn_container_right","modalProps","toggleFullscreen","isFullscreen","FullscreenExit","Fullscreen","LightBoxViewRenderer","getStyles","currentIndex","abs","maxHeight","userSelect","SlideTransition","close","success","error","warning","icon","Toast","Icon","CheckCircle","Error","Warning","queueRef","setOpen","undefined","messageInfo","setMessageInfo","processQueue","shift","getTime","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","ContentProps","content","slide_text","slide_text_mobile","paddingTop","subtitle","slide_title","whiteSpace","lineHeight","CarouselShowCase","smScreen","mobile","autoplay","closeCarousel","onStart","media","SLIDE1","mediaBackgroundStyle","green","textMobile","text","SLIDE3","SLIDE2","MapWrapper","lazy","navButtonStyles","base","transform","imagePositionerStyles","blanketStyles","useHistory","carouselOpen","setCarouselOpen","setOpenFavorites","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","path","resultsRef","setLoadingPhotos","setResponseDetails","setDisplayPhotoMarkers","setDisplayFavorites","getBounds","toJSON","FlikrApi","zoomToLocation","panTo","setZoom","navigator","getCurrentPosition","coords","fallback","Skeleton","screenWidth900px","styles","blanket","positioner","components","Header","View","views","srcset","caption","x","navigationPrev","navigationNext","to","hostname","match","ReactDOM","render","useReducer","searchRadius","Provider","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2b9efa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pngLogo.9f3169d5.png\";","module.exports = __webpack_public_path__ + \"static/media/SLIDE1.49a541dd.png\";","module.exports = __webpack_public_path__ + \"static/media/SLIDE2.869e96b8.png\";","module.exports = __webpack_public_path__ + \"static/media/SLIDE3.87f4dc6d.png\";","/** *Flickrs API has got a bug -> even if you set radius units to km the geo-search is performed in miles\r\n * Since the UI is in km before each api call the radius is transformed from km to miles\r\n */\r\nconst kmToMiles = km => km / 1.609;\r\n\r\nexport const getPhotosByTitle = searchParams => {\r\n  /* This will ask flicker to fetch all photos (that have geolocation)\r\n    that contain the markers location title in any way (tag, image name, album name etc)\r\n    the photos returned will be within a 31km radius from the markers position\r\n    the func returns an array of photos details (id,farm,server etc)\r\n  */\r\n\r\n  console.log(searchParams);\r\n  //will be appended to response\r\n  let query;\r\n\r\n  let url = new URLSearchParams();\r\n  url.append(\"method\", \"flickr.photos.search\");\r\n  url.append(\"api_key\", \"f6536bb373bca1fcd14d4da1281f2839\");\r\n  // url.append('tags', marker.title); //text produces broader results than tags leave it for now may implement later\r\n  if (searchParams.searchText) url.append(\"text\", searchParams.searchText);\r\n  if (searchParams.sortMethod) url.append(\"sort\", searchParams.sortMethod);\r\n  if (searchParams.minUploadDate) {\r\n    url.append(\"min_upload_date\", searchParams.minUploadDate);\r\n  }\r\n  if (searchParams.maxUploadDate) {\r\n    url.append(\"max_upload_date\", searchParams.maxUploadDate);\r\n  }\r\n  if (searchParams.minTakenDate) {\r\n    url.append(\"min_taken_date\", searchParams.minTakenDate);\r\n  }\r\n  if (searchParams.maxTakenDate) {\r\n    url.append(\"max_taken_date\", searchParams.maxTakenDate);\r\n  }\r\n  if (searchParams.searchMethod === \"EXTENTS\") {\r\n    // const { south, west, north, east } = searchParams.bounds;\r\n    let { south, west, north, east } = searchParams.bounds;\r\n\r\n    south = south.toFixed(5);\r\n    west = west.toFixed(5);\r\n    north = north.toFixed(5);\r\n    east = east.toFixed(5);\r\n\r\n    // south = south.toFixed(5).toString();\r\n    // west = west.toFixed(5).toString();\r\n    // north = north.toFixed(5).toString();\r\n    // east = east.toFixed(5).toString();\r\n\r\n    query = {\r\n      bounds: searchParams.bounds,\r\n      searchMethod: searchParams.searchMethod,\r\n      maxTakenDate: searchParams.maxTakenDate,\r\n      maxUploadDate: searchParams.maxUploadDate,\r\n      minTakenDate: searchParams.minTakenDate,\r\n      minUploadDate: searchParams.minUploadDate,\r\n      searchText: searchParams.searchText,\r\n      sortMethod: searchParams.sortMethod\r\n      // south,\r\n      // west,\r\n      // north,\r\n      // east\r\n    };\r\n    url.append(\"bbox\", `${west},${south},${east},${north}`);\r\n    // var temp = west + \",\" + south + \",\" + east + \",\" + north;\r\n    // console.log(temp);\r\n    // url.append(\"bbox\", temp);\r\n  }\r\n  if (searchParams.searchMethod === \"CIRCLE\") {\r\n    url.append(\"lat\", searchParams.lat);\r\n    url.append(\"lon\", searchParams.lng);\r\n    url.append(\"radius\", kmToMiles(searchParams.radius)); //1 to 32 km\r\n    url.append(\"radius_units\", \"km\");\r\n    query = {\r\n      // searchMethod: \"CIRCLE\",\r\n      // bounds: searchParams.bounds,\r\n      lat: searchParams.lat,\r\n      lng: searchParams.lng,\r\n      radius: searchParams.radius,\r\n      searchMethod: searchParams.searchMethod,\r\n      maxTakenDate: searchParams.maxTakenDate,\r\n      maxUploadDate: searchParams.maxUploadDate,\r\n      minTakenDate: searchParams.minTakenDate,\r\n      minUploadDate: searchParams.minUploadDate,\r\n      searchText: searchParams.searchText,\r\n      sortMethod: searchParams.sortMethod\r\n    };\r\n  }\r\n\r\n  url.append(\"has_geo\", \"1\");\r\n  url.append(\r\n    \"per_page\",\r\n    searchParams.resultsPerPage ? searchParams.resultsPerPage : \"50\"\r\n  ); //250max for photos with geolocation\r\n  url.append(\"format\", \"json\");\r\n  url.append(\"nojsoncallback\", \"1\");\r\n  url.append(\r\n    \"extras\",\r\n    \"url_t,url_m,url_c,url_l,url_h,url_o,geo, date_upload, date_taken, owner_name\"\r\n  );\r\n  if (searchParams.page) url.append(\"page\", searchParams.page);\r\n\r\n  let arrayOfPhotos = fetch(\"https://api.flickr.com/services/rest/?\" + url)\r\n    .then(res => {\r\n      console.log(url);\r\n      return res.json().then(json => {\r\n        console.log(\"*****FLICKR RESPONSE:****\");\r\n        console.log(json);\r\n\r\n        if (json.stat === \"ok\") {\r\n          return {\r\n            ...query,\r\n            stat: json.stat,\r\n            currentPage: json.photos.page,\r\n            totalPages: json.photos.pages,\r\n            totalPhotos: json.photos.total,\r\n            perPage: json.photos.perpage,\r\n            photos: json.photos.photo.map(img => {\r\n              return {\r\n                // ...img,\r\n                dateupload: img.dateupload,\r\n                datetaken: img.datetaken,\r\n                ownername: img.ownername,\r\n                geolocation: {\r\n                  lat: parseFloat(img.latitude),\r\n                  lng: parseFloat(img.longitude)\r\n                },\r\n                photoId: img.id,\r\n                width_t: img.width_t ? parseInt(img.width_t) : \"\",\r\n                width_c: img.width_c ? parseInt(img.width_c) : \"\",\r\n                width_h: img.width_h ? parseInt(img.width_h) : \"\",\r\n                width_l: img.width_l ? parseInt(img.width_l) : \"\",\r\n                width_m: img.width_m ? parseInt(img.width_m) : \"\",\r\n                width_o: img.width_o ? parseInt(img.width_o) : \"\",\r\n                height_c: img.height_c ? parseInt(img.height_c) : \"\",\r\n                height_h: img.height_h ? parseInt(img.height_h) : \"\",\r\n                height_l: img.height_l ? parseInt(img.height_l) : \"\",\r\n                height_m: img.height_m ? parseInt(img.height_m) : \"\",\r\n                height_o: img.height_o ? parseInt(img.height_o) : \"\",\r\n                /* since you cant predict in what size will the photo be availiable:\r\n        if medium size is availiable use it if not get the original size\r\n        as fallback give the image 100px width and height */\r\n                height: img.height_m\r\n                  ? parseInt(img.height_m)\r\n                  : img.height_o\r\n                  ? parseInt(img.height_o)\r\n                  : 100,\r\n                width: img.width_m\r\n                  ? parseInt(img.width_m)\r\n                  : img.width_o\r\n                  ? parseInt(img.width_o)\r\n                  : 100,\r\n                src: img.url_l ? img.url_l : img.url_m ? img.url_m : img.url_o,\r\n                title: img.title,\r\n                alt: img.title,\r\n                key: img.id,\r\n                owner: img.owner,\r\n                thumb: img.url_t,\r\n                srcSet: [\r\n                  img.url_m ? `${img.url_m} ${img.width_m}w` : \"\",\r\n                  img.url_c ? `${img.url_c} ${img.width_c}w` : \"\",\r\n                  img.url_l ? `${img.url_l} ${img.width_l}w` : \"\",\r\n                  img.url_h ? `${img.url_h} ${img.width_h}w` : \"\",\r\n                  img.url_o ? `${img.url_o} ${img.width_o}w` : \"\"\r\n                ],\r\n                sizes:\r\n                  \"(min-width: 480px) 50vw, (min-width: 1024px) 33.3vw, 100vw\"\r\n              };\r\n            })\r\n          };\r\n        } else if (json.stat === \"fail\") {\r\n          // console.log(\"error!\");\r\n          // console.log(\"code: \" + json.code + \" message: \" + json.message);\r\n          // stat: \"fail\", code: 4, message: \"Not a valid bounding box\" (Antimeridian error)\r\n          return json;\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      // console.log(err);\r\n      // console.log(err.message);\r\n      // set code as 9999 or 8888 to avoid any conflict with flickrs api responses\r\n      if (err.message === \"Failed to fetch\") {\r\n        return { ...err, stat: \"fail\", message: err.message, code: 9999 };\r\n      }\r\n      return {\r\n        ...err,\r\n        stat: \"fail\",\r\n        message: \"Failed to fetch from Flickr...\",\r\n        code: 8888\r\n      };\r\n    });\r\n\r\n  return arrayOfPhotos;\r\n};\r\n\r\nexport const flickrUrlConstructor = array => {\r\n  /* This takes the array of photo information from the getPhotosByTitle() \r\n  and transforms each photo to a straightforward url*/\r\n\r\n  let urlArr = {\r\n    default: [],\r\n    thumbNail: [], //t\r\n    medium: [], //c\r\n    large: [], //b\r\n    title: []\r\n  };\r\n  if (array[0] !== \"error\") {\r\n    for (let i = 0; i < array.length; i++) {\r\n      urlArr.default.push([\r\n        `https://farm${array[i].farm}.staticflickr.com/${array[i].server}/${array[i].id}_${array[i].secret}.jpg`,\r\n        array[i].id,\r\n        [array[i].title][0],\r\n        array[i].owner\r\n      ]);\r\n      urlArr.thumbNail.push([\r\n        `https://farm${array[i].farm}.staticflickr.com/${array[i].server}/${array[i].id}_${array[i].secret}_t.jpg`,\r\n        array[i].id,\r\n        [array[i].title][0]\r\n      ]);\r\n      urlArr.medium.push([\r\n        `https://farm${array[i].farm}.staticflickr.com/${array[i].server}/${array[i].id}_${array[i].secret}_c.jpg`,\r\n        array[i].id,\r\n        [array[i].title][0]\r\n      ]);\r\n      urlArr.large.push([\r\n        `https://farm${array[i].farm}.staticflickr.com/${array[i].server}/${array[i].id}_${array[i].secret}_b.jpg`,\r\n        array[i].id,\r\n        [array[i].title][0]\r\n      ]);\r\n      urlArr.title.push([array[i].title]);\r\n    }\r\n  } else {\r\n    urlArr = {\r\n      error: true,\r\n      default: [\"no-preview128px.png\"],\r\n      thumbNail: [\"no-preview128px.png\"], //t\r\n      medium: [\"no-preview128px.png\"], //c\r\n      large: [\"no-preview128px.png\"] //b\r\n    };\r\n  }\r\n  return urlArr;\r\n};\r\n\r\nexport const getPhotoGeoLocation = photo_id => {\r\n  /* This flicker api call returns a set of coordinates for a given photo\r\n    (Since there are no means to get the coordinates of a batch of photos)\r\n    this method must be called EACH TIME a new photograph marker is to be plotted on the map\r\n  */\r\n  let url = new URLSearchParams();\r\n  url.append(\"method\", \"flickr.photos.geo.getLocation\");\r\n  url.append(\"api_key\", \"f6536bb373bca1fcd14d4da1281f2839\");\r\n  url.append(\"format\", \"json\");\r\n  url.append(\"nojsoncallback\", \"1\");\r\n  url.append(\"photo_id\", photo_id);\r\n\r\n  let result = fetch(\"https://api.flickr.com/services/rest?\" + url)\r\n    .then(res => {\r\n      return res.json().then(json => {\r\n        console.log(json);\r\n        let position = {\r\n          lat: parseFloat(json.photo.location.latitude),\r\n          lng: parseFloat(json.photo.location.longitude)\r\n        };\r\n        return position;\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      return [\"error\"];\r\n    });\r\n\r\n  return result;\r\n};\r\n","import React from \"react\";\r\n\r\nconst StateContext = React.createContext();\r\n\r\nexport default StateContext;\r\n","import React from \"react\";\r\n\r\nconst DispatchContext = React.createContext();\r\n\r\nexport default DispatchContext;\r\n","import React from \"react\";\r\n\r\nconst QueryContext = React.createContext();\r\n\r\nexport default QueryContext;\r\n","export const SET_USER_LOCATION = \"SET_USER_LOCATION\";\r\nexport const SET_PHOTOS = \"SET_PHOTOS\";\r\nexport const UPDATE_PHOTOS = \"UPDATE_PHOTOS\";\r\nexport const BLOCK_USER = \"BLOCK_USER\";\r\nexport const ADD_IMG_TO_FAVORITES = \"ADD_IMG_TO_FAVORITES\";\r\nexport const REMOVE_IMG_FROM_FAVORITES = \"REMOVE_IMG_FROM_FAVORITES\";\r\nexport const SET_MAP_LOADED = \"SET_MAP_LOADED\";\r\nexport const MAKE_TOAST = \"MAKE_TOAST\";\r\n\r\nconst setUserLocation = (action, state) => {\r\n  return {\r\n    ...state,\r\n    userLocation: action.userLocation\r\n  };\r\n};\r\n\r\nconst setPhotos = (action, state) => {\r\n  /* currently setPhotos resets blocked users (initial request) */\r\n  let filteredPhotos = action.photos;\r\n\r\n  /**\r\n   * set isFavorite:true to any img returned from the response that is already in favorites\r\n   * so there are no duplicate markers\r\n   **/\r\n  if (state.favorites.length > 0) {\r\n    filteredPhotos = filteredPhotos.map(img => {\r\n      return state.favorites.find(el => el.photoId === img.photoId)\r\n        ? { ...img, isFavorite: true }\r\n        : img;\r\n    });\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    photos: action.photos,\r\n    filteredPhotos,\r\n    blockedUsers: [],\r\n    hiddenPhotos: []\r\n  };\r\n};\r\n\r\nconst updatePhotos = (action, state) => {\r\n  /** updatePhotos will expand the previous query of photos (previous results + new results) */\r\n  /**One for each sounds better... if true go to newFiltered if false go to newHidden */\r\n  const newPhotosFiltered = action.photos.filter(\r\n    photo => !state.blockedUsers.includes(photo.owner)\r\n  );\r\n  const newHiddenPhotos = action.photos.filter(photo =>\r\n    state.blockedUsers.includes(photo.owner)\r\n  );\r\n  let filteredPhotos = state.filteredPhotos.concat(newPhotosFiltered);\r\n\r\n  if (state.favorites.length > 0) {\r\n    filteredPhotos = filteredPhotos.map(img => {\r\n      return state.favorites.find(el => el.photoId === img.photoId)\r\n        ? { ...img, isFavorite: true }\r\n        : img;\r\n    });\r\n  }\r\n\r\n  const hiddenPhotos = state.hiddenPhotos.concat(newHiddenPhotos);\r\n  const photos = state.photos.concat(action.photos);\r\n\r\n  return { ...state, photos, filteredPhotos, hiddenPhotos };\r\n};\r\n\r\nconst blockUser = (action, state) => {\r\n  const updatedBlockedUsers = state.blockedUsers.concat(action.userId);\r\n  const filteredPhotos = state.filteredPhotos.filter(\r\n    photo => !updatedBlockedUsers.includes(photo.owner)\r\n  );\r\n  const hiddenPhotos = state.photos.filter(photo =>\r\n    updatedBlockedUsers.includes(photo.owner)\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    blockedUsers: updatedBlockedUsers,\r\n    filteredPhotos,\r\n    hiddenPhotos\r\n  };\r\n};\r\n\r\nconst addImgToFavorites = (action, state) => {\r\n  const favorites = state.favorites.concat(action.image);\r\n\r\n  const filteredPhotos = state.filteredPhotos.map(img => {\r\n    return img.photoId === action.image.photoId\r\n      ? { ...img, isFavorite: true }\r\n      : img;\r\n  });\r\n\r\n  return { ...state, favorites, filteredPhotos };\r\n};\r\n\r\nconst removeImgFromFavorites = (action, state) => {\r\n  const favorites = [...state.favorites];\r\n\r\n  const filteredIndex = state.filteredPhotos.findIndex(\r\n    el => el.photoId === action.image.photoId\r\n  );\r\n  let filteredPhotos = [...state.filteredPhotos];\r\n  if (filteredIndex !== -1) {\r\n    filteredPhotos[filteredIndex].isFavorite = false;\r\n  }\r\n\r\n  const index = favorites.findIndex(\r\n    img => img.photoId === action.image.photoId\r\n  );\r\n\r\n  if (index !== -1) favorites.splice(index, 1);\r\n  return { ...state, favorites, filteredPhotos };\r\n};\r\n\r\nconst setMapLoaded = (action, state) => {\r\n  return { ...state, mapLoaded: action.mapLoaded };\r\n};\r\n\r\nconst triggerToast = (action, state) => {\r\n  const toast = {\r\n    message: action.message,\r\n    variant: action.variant\r\n  };\r\n  return { ...state, toast };\r\n};\r\n\r\nexport const rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_LOCATION:\r\n      console.log(action.type);\r\n      return setUserLocation(action, state);\r\n\r\n    case SET_PHOTOS:\r\n      console.log(action.type);\r\n      return setPhotos(action, state);\r\n    case UPDATE_PHOTOS:\r\n      console.log(action.type);\r\n      return updatePhotos(action, state);\r\n    case BLOCK_USER:\r\n      console.log(action.type);\r\n      return blockUser(action, state);\r\n    case ADD_IMG_TO_FAVORITES:\r\n      console.log(action.type);\r\n      return addImgToFavorites(action, state);\r\n    case REMOVE_IMG_FROM_FAVORITES:\r\n      console.log(action.type);\r\n      return removeImgFromFavorites(action, state);\r\n    case SET_MAP_LOADED:\r\n      console.log(action.type);\r\n      return setMapLoaded(action, state);\r\n    case MAKE_TOAST:\r\n      console.log(action);\r\n      return triggerToast(action, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\n\r\nconst DispatchQueryContext = React.createContext();\r\n\r\nexport default DispatchQueryContext;\r\n","export const SET_MIN_UPLOAD_DATE = \"SET_MIN_UPLOAD_DATE\";\r\nexport const SET_MAX_UPLOAD_DATE = \"SET_MAX_UPLOAD_DATE\";\r\nexport const SET_MIN_TAKEN_DATE = \"SET_MIN_TAKEN_DATE\";\r\nexport const SET_MAX_TAKEN_DATE = \"SET_MAX_TAKEN_DATE\";\r\nexport const SET_MAX_RESULTS_PER_PAGE = \"SET_MAX_RESULTS_PER_PAGE\";\r\nexport const SET_SEARCH_METHOD_SORTING = \"SET_SEARCH_METHOD_SORTING\";\r\nexport const SET_SEARCH_TEXT = \"SET_SEARCH_TEXT\";\r\n\r\nconst setMinUploadDate = (action, state) => {\r\n  return { ...state, minUploadDate: action.minUploadDate };\r\n};\r\n\r\nconst setMaxUploadDate = (action, state) => {\r\n  return { ...state, maxUploadDate: action.maxUploadDate };\r\n};\r\n\r\nconst setMinTakenDate = (action, state) => {\r\n  return { ...state, minTakenDate: action.minTakenDate };\r\n};\r\n\r\nconst setMaxTakenDate = (action, state) => {\r\n  return { ...state, maxTakenDate: action.maxTakenDate };\r\n};\r\n\r\nconst setResultsPerPage = (action, state) => {\r\n  return {\r\n    ...state,\r\n    resultsPerPage: action.resultsPerPage\r\n  };\r\n};\r\n\r\nconst setSearchMethodSorting = (action, state) => {\r\n  return { ...state, sortMethod: action.payload };\r\n};\r\n\r\nconst setSearchText = (action, state) => {\r\n  return { ...state, searchText: action.payload };\r\n};\r\n\r\nexport const queryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_MAX_RESULTS_PER_PAGE:\r\n      console.log(action.type);\r\n      return setResultsPerPage(action, state);\r\n    case SET_MIN_UPLOAD_DATE:\r\n      console.log(action.type);\r\n      return setMinUploadDate(action, state);\r\n    case SET_MAX_UPLOAD_DATE:\r\n      console.log(action.type);\r\n      return setMaxUploadDate(action, state);\r\n    case SET_MIN_TAKEN_DATE:\r\n      console.log(action.type);\r\n      return setMinTakenDate(action, state);\r\n    case SET_MAX_TAKEN_DATE:\r\n      console.log(action.type);\r\n      return setMaxTakenDate(action, state);\r\n    case SET_SEARCH_METHOD_SORTING:\r\n      console.log(action.type);\r\n      return setSearchMethodSorting(action, state);\r\n    case SET_SEARCH_TEXT:\r\n      console.log(action.type);\r\n      return setSearchText(action, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default queryReducer;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles, Input, Typography, Slider } from \"@material-ui/core/\";\r\nimport QueryContext from \"../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_MAX_RESULTS_PER_PAGE } from \"../../context/QueryContext/queryReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  input: {\r\n    marginLeft: \"1rem\",\r\n    marginBottom: \"1rem\",\r\n    maxWidth: \"4rem\"\r\n  }\r\n});\r\n\r\nexport default function RequestNumberSlider(props) {\r\n  const classes = useStyles();\r\n  const store = useContext(QueryContext);\r\n  const dispatch = useContext(DispatchQueryContext);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    dispatch({\r\n      type: SET_MAX_RESULTS_PER_PAGE,\r\n      resultsPerPage: newValue\r\n    });\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    let val = parseInt(event.target.value);\r\n    if (!Number.isNaN(val) && typeof val == \"number\") {\r\n      dispatch({\r\n        type: SET_MAX_RESULTS_PER_PAGE,\r\n        resultsPerPage: val\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    const value = store.resultsPerPage;\r\n    if (value <= 10) {\r\n      dispatch({\r\n        type: SET_MAX_RESULTS_PER_PAGE,\r\n        resultsPerPage: 10\r\n      });\r\n    } else if (value <= 250) {\r\n      dispatch({\r\n        type: SET_MAX_RESULTS_PER_PAGE,\r\n        resultsPerPage: Math.trunc(value / 10) * 10\r\n      });\r\n    } else if (value > 250) {\r\n      dispatch({\r\n        type: SET_MAX_RESULTS_PER_PAGE,\r\n        resultsPerPage: 250\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography align=\"center\" gutterBottom>\r\n        Number of photos to return per page\r\n      </Typography>\r\n\r\n      <div className={classes.root}>\r\n        <Slider\r\n          value={store.resultsPerPage}\r\n          onChange={handleSliderChange}\r\n          aria-labelledby=\"input-slider\"\r\n          step={10}\r\n          min={10}\r\n          max={250}\r\n          style={{ width: \"75%\", marginRight: \"0.5rem\", marginLeft: \"0.5rem\" }}\r\n        />\r\n        <Input\r\n          className={classes.input}\r\n          value={store.resultsPerPage}\r\n          type=\"number\"\r\n          margin=\"dense\"\r\n          onChange={handleInputChange}\r\n          onBlur={handleBlur}\r\n          inputProps={{\r\n            step: 10,\r\n            min: 10,\r\n            max: 250,\r\n            type: \"number\",\r\n            \"aria-labelledby\": \"input-slider\"\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport QueryContext from \"../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_SEARCH_METHOD_SORTING } from \"../../context/QueryContext/queryReducer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    width: \"100%\"\r\n  },\r\n  root_select: {\r\n    textAlign: \"left\"\r\n  }\r\n}));\r\n\r\nexport default function SelectSortingMethod(props) {\r\n  const classes = useStyles();\r\n  const store = useContext(QueryContext);\r\n  const dispatch = useContext(DispatchQueryContext);\r\n\r\n  const handleSelectChange = event => {\r\n    dispatch({\r\n      type: SET_SEARCH_METHOD_SORTING,\r\n      payload: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel htmlFor=\"sorting-helper\">Display results by:</InputLabel>\r\n      <Select\r\n        classes={{ root: classes.root_select }}\r\n        value={store.sortMethod}\r\n        onChange={handleSelectChange}\r\n      >\r\n        <MenuItem value={\"date-posted-asc\"}>Date posted ascending</MenuItem>\r\n        <MenuItem value={\"date-posted-desc\"}>Date posted descending</MenuItem>\r\n        <MenuItem value={\"date-taken-asc\"}>Date taken ascending</MenuItem>\r\n        <MenuItem value={\"date-taken-desc\"}>Date taken descending</MenuItem>\r\n      </Select>\r\n      <FormHelperText>\r\n        Sorting filters must be set before photo search\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  InputAdornment,\r\n  InputLabel,\r\n  Input,\r\n  IconButton,\r\n  FormControl,\r\n  FormHelperText\r\n} from \"@material-ui/core/\";\r\nimport { Close } from \"@material-ui/icons/\";\r\nimport QueryContext from \"../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_SEARCH_TEXT } from \"../../context/QueryContext/queryReducer\";\r\n\r\nexport default function TextQuery(props) {\r\n  const store = useContext(QueryContext);\r\n  const dispatch = useContext(DispatchQueryContext);\r\n\r\n  const handleInputChange = event => {\r\n    dispatch({\r\n      type: SET_SEARCH_TEXT,\r\n      payload: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleClearInput = e => {\r\n    dispatch({\r\n      type: SET_SEARCH_TEXT,\r\n      payload: \"\"\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.searchFlikr();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl onSubmit={handleSubmit} style={{ width: \"100%\" }}>\r\n        <InputLabel htmlFor=\"adornment-text\">Optional text query</InputLabel>\r\n        <Input\r\n          id=\"adornment-text\"\r\n          type=\"text\"\r\n          fullWidth\r\n          placeholder=\"search for a keyword in tags,albums,titles etc\"\r\n          value={store.searchText}\r\n          onChange={handleInputChange}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                style={store.searchText.length > 0 ? {} : { display: \"none\" }}\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClearInput}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <FormHelperText style={{ margin: \"5px 0 \" }}>\r\n        Adding text to the query will greatly limit the results\r\n      </FormHelperText>\r\n    </form>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { format } from \"date-fns\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport QueryContext from \"../../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_MIN_UPLOAD_DATE } from \"../../../context/QueryContext/queryReducer\";\r\n\r\nexport default function MinUploadDatePicker(props) {\r\n  const store = useContext(QueryContext);\r\n  const dispatch = useContext(DispatchQueryContext);\r\n  /** placeholderDate is used:\r\n   * 1) As initial date at the initialization of the component\r\n   * 2) As a placeholder when the user unchecks the checkbox\r\n   * so that the date doesn't reset each time after disabling the datepicker\r\n   * current implementation won't work on mobile because:\r\n   * when the drawer is closed the datepickers are unmounted and its state is wiped\r\n   * -initial minUploadDate is set to Flickrs official launch year 2004\r\n   */\r\n  const [placeholderDate, setPlaceholderDate] = useState(new Date(2004, 1, 1));\r\n\r\n  const checked = store.minUploadDate ? true : false;\r\n  let selectedDate = checked ? store.minUploadDate : placeholderDate;\r\n\r\n  const handleCheckBox = event => {\r\n    if (event.target.checked) {\r\n      dispatch({\r\n        type: SET_MIN_UPLOAD_DATE,\r\n        minUploadDate: format(selectedDate, \"yyyy-MM-dd\")\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_MIN_UPLOAD_DATE,\r\n        minUploadDate: null\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    selectedDate = date;\r\n    setPlaceholderDate(date);\r\n    dispatch({\r\n      type: SET_MIN_UPLOAD_DATE,\r\n      minUploadDate: format(date, \"yyyy-MM-dd\") //sql format, also works with flickr api and unlike getUnixTime(date) is readable\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          minDate={\"2000,1,1\"}\r\n          style={{ marginLeft: \"0.5rem\" }}\r\n          disabled={!checked}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"min upload date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          // clearable={true}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <Checkbox\r\n        style={{ alignSelf: \"flex-end\", marginLeft: \"1rem\" }}\r\n        checked={checked}\r\n        onChange={handleCheckBox}\r\n        value=\"min upload date\"\r\n        color=\"primary\"\r\n        inputProps={{\r\n          \"aria-label\": \"minimum upload date\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { format } from \"date-fns\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport QueryContext from \"../../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_MAX_UPLOAD_DATE } from \"../../../context/QueryContext/queryReducer\";\r\n\r\nexport default function MaxUploadDatePicker(props) {\r\n  const dispatch = useContext(DispatchQueryContext);\r\n  const store = useContext(QueryContext);\r\n\r\n  const [placeholderDate, setPlaceholderDate] = useState(new Date());\r\n\r\n  const checked = store.maxUploadDate ? true : false;\r\n  let selectedDate = checked ? store.maxUploadDate : placeholderDate;\r\n\r\n  const handleCheckBox = event => {\r\n    if (event.target.checked) {\r\n      dispatch({\r\n        type: SET_MAX_UPLOAD_DATE,\r\n        maxUploadDate: format(selectedDate, \"yyyy-MM-dd\")\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_MAX_UPLOAD_DATE,\r\n        maxUploadDate: null\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    selectedDate = date;\r\n    setPlaceholderDate(date);\r\n    dispatch({\r\n      type: SET_MAX_UPLOAD_DATE,\r\n      maxUploadDate: format(date, \"yyyy-MM-dd\")\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          minDate={\"2000,1,1\"}\r\n          style={{ marginLeft: \"0.5rem\" }}\r\n          disabled={!checked}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"max upload date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <Checkbox\r\n        style={{ alignSelf: \"flex-end\", marginLeft: \"1rem\" }}\r\n        checked={checked}\r\n        onChange={handleCheckBox}\r\n        value=\"use max upload date\"\r\n        color=\"primary\"\r\n        inputProps={{\r\n          \"aria-label\": \"maximum upload date\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { format } from \"date-fns\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport QueryContext from \"../../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_MIN_TAKEN_DATE } from \"../../../context/QueryContext/queryReducer\";\r\n\r\nexport default function MinTakenDatePicker(props) {\r\n  const dispatch = useContext(DispatchQueryContext);\r\n  const store = useContext(QueryContext);\r\n\r\n  const [placeholderDate, setPlaceholderDate] = useState(new Date(2004, 1, 1));\r\n\r\n  const checked = store.minTakenDate ? true : false;\r\n  let selectedDate = checked ? store.minTakenDate : placeholderDate;\r\n\r\n  const handleCheckBox = event => {\r\n    if (event.target.checked) {\r\n      dispatch({\r\n        type: SET_MIN_TAKEN_DATE,\r\n        minTakenDate: format(selectedDate, \"yyyy-MM-dd\") //sql format readable by humans and flickr API\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_MIN_TAKEN_DATE,\r\n        minTakenDate: null\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    selectedDate = date;\r\n    setPlaceholderDate(date);\r\n    dispatch({\r\n      type: SET_MIN_TAKEN_DATE,\r\n      minTakenDate: format(date, \"yyyy-MM-dd\")\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          style={{ marginLeft: \"0.5rem\" }}\r\n          disabled={!checked}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"min taken date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <Checkbox\r\n        style={{ alignSelf: \"flex-end\", marginLeft: \"1rem\" }}\r\n        checked={checked}\r\n        onChange={handleCheckBox}\r\n        value=\"min taken date\"\r\n        color=\"primary\"\r\n        inputProps={{\r\n          \"aria-label\": \"minimum taken date\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { format } from \"date-fns\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport QueryContext from \"../../../context/QueryContext/queryContext\";\r\nimport DispatchQueryContext from \"../../../context/QueryContext/dispatchQueryContext\";\r\nimport { SET_MAX_TAKEN_DATE } from \"../../../context/QueryContext/queryReducer\";\r\n\r\nexport default function MaxTakenDatePicker(props) {\r\n  const dispatch = useContext(DispatchQueryContext);\r\n  const store = useContext(QueryContext);\r\n\r\n  const [placeholderDate, setPlaceholderDate] = useState(new Date());\r\n\r\n  const checked = store.maxTakenDate ? true : false;\r\n  let selectedDate = checked ? store.maxTakenDate : placeholderDate;\r\n\r\n  const handleCheckBox = event => {\r\n    if (event.target.checked) {\r\n      dispatch({\r\n        type: SET_MAX_TAKEN_DATE,\r\n        maxTakenDate: format(selectedDate, \"yyyy-MM-dd\")\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SET_MAX_TAKEN_DATE,\r\n        maxTakenDate: false\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    selectedDate = date;\r\n    setPlaceholderDate(date);\r\n    dispatch({\r\n      type: SET_MAX_TAKEN_DATE,\r\n      maxTakenDate: format(date, \"yyyy-MM-dd\")\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          style={{ marginLeft: \"0.5rem\" }}\r\n          disabled={!checked}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"max taken date\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={selectedDate}\r\n          onChange={date => handleDateChange(date)}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <Checkbox\r\n        style={{ alignSelf: \"flex-end\", marginLeft: \"1rem\" }}\r\n        checked={checked}\r\n        onChange={handleCheckBox}\r\n        value=\"max taken date\"\r\n        color=\"primary\"\r\n        inputProps={{\r\n          \"aria-label\": \"maximum taken date\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SwitchButton(props) {\r\n  const checked = !props.checked;\r\n\r\n  const handleSwitchChange = event => {\r\n    props.callback();\r\n  };\r\n\r\n  return (\r\n    <FormGroup row style={{ justifyContent: \"left\" }}>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleSwitchChange}\r\n            value={checked}\r\n          />\r\n        }\r\n        label={props.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n  Button,\r\n  makeStyles\r\n} from \"@material-ui/core/\";\r\nimport {\r\n  MenuRounded,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  MyLocationTwoTone,\r\n  Map,\r\n  Ballot,\r\n  ChevronLeft\r\n} from \"@material-ui/icons/\";\r\nimport RequstNumberSlider from \"../controlPanel/requestsNumberSlider\";\r\nimport SelectSortingMethod from \"../controlPanel/selectSortingMethod\";\r\nimport TextQuery from \"../controlPanel/textQuery\";\r\nimport MinUploadDatePicker from \"../controlPanel/datePickers/minUploadDatePicker\";\r\nimport MaxUploadDatePicker from \"../controlPanel/datePickers/maxUploadDatePicker\";\r\nimport MinTakenDatePicker from \"../controlPanel/datePickers/minTakenDatePicker\";\r\nimport MaxTakenDatePicker from \"../controlPanel/datePickers/maxTakenDatePicker\";\r\nimport CustomSwitch from \"../controlPanel/switches/customSwitch\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: \"70vw\"\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  hamburger: {\r\n    marginRight: \"0.5rem\",\r\n    color: \"#fff\"\r\n  }\r\n});\r\n\r\nfunction DrawerMenu(props) {\r\n  const classes = useStyles();\r\n\r\n  const [openQueryOption, setOpenQueryOptions] = useState(false);\r\n  const handleQueryOptionsClick = () => setOpenQueryOptions(!openQueryOption);\r\n  const [openMapOptions, setOpenMapOptions] = useState(false);\r\n  const handleMapOptionsClick = () => setOpenMapOptions(!openMapOptions);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  // const toggleDrawer = () => {\r\n  //   const prevState = !drawerOpen;\r\n  //   setDrawerOpen(prevState);\r\n  // };\r\n\r\n  const openDrawer = () => {\r\n    setDrawerOpen(true);\r\n    props.history.push(\"/menu/\");\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setDrawerOpen(false);\r\n    props.history.goBack();\r\n  };\r\n  React.useEffect(() => {\r\n    window.onpopstate = () => {\r\n      setDrawerOpen(false);\r\n      // closeDrawer();\r\n      // alert(\"popState!\");\r\n      // console.log(\"props.history.location.pathname:\");\r\n      // console.log(props.history.location.pathname);\r\n      // if (props.history.location.pathname === \"/\" && props.openFavorites) {\r\n      //   props.handleCloseFavorites();\r\n      // }\r\n    };\r\n  });\r\n  const DrawerItems = () => (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <List style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <IconButton onClick={closeDrawer} style={{ marginRight: \"1rem\" }}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n      </List>\r\n      <Divider />\r\n\r\n      <List>\r\n        <ListItem button onClick={handleQueryOptionsClick}>\r\n          <ListItemIcon>\r\n            <Ballot />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Query Options\" />\r\n          {openQueryOption ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n\r\n        <Collapse in={openQueryOption} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem style={{ flexFlow: \"column\" }}>\r\n              <RequstNumberSlider />\r\n            </ListItem>\r\n\r\n            <ListItem>\r\n              <SelectSortingMethod />\r\n            </ListItem>\r\n\r\n            <ListItem>\r\n              <TextQuery searchFlikr={props.searchFlikr} />\r\n            </ListItem>\r\n\r\n            <Divider className={classes.divider} />\r\n\r\n            <ListItem>\r\n              <MinUploadDatePicker />\r\n            </ListItem>\r\n\r\n            <ListItem>\r\n              <MaxUploadDatePicker />\r\n            </ListItem>\r\n\r\n            <Divider className={classes.divider} />\r\n\r\n            <ListItem>\r\n              <MinTakenDatePicker />\r\n            </ListItem>\r\n            <ListItem>\r\n              <MaxTakenDatePicker />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n      {/* SECOND COLLAPSABLE LIST  */}\r\n      <List>\r\n        <ListItem button onClick={handleMapOptionsClick}>\r\n          <ListItemIcon>\r\n            <Map />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Map Options\" />\r\n          {openMapOptions ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n\r\n        <Collapse in={openMapOptions} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem>\r\n              <CustomSwitch\r\n                callback={props.togglePhotoMarkerDisplay}\r\n                checked={props.displayPhotoMarkers}\r\n                label=\"Hide all results from the map\"\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <CustomSwitch\r\n                callback={props.toggleFavorites}\r\n                checked={props.displayFavorites}\r\n                label=\"Hide all favorites from the map\"\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginTop: \"1rem\", color: \"black\", width: \"100%\" }}\r\n                color=\"secondary\"\r\n                size={\"large\"}\r\n                onClick={props.handleMyLocationClick}\r\n              >\r\n                <MyLocationTwoTone style={{ marginRight: \"1rem\" }} />\r\n                My location\r\n              </Button>\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        // onClick={toggleDrawer}\r\n        onClick={openDrawer}\r\n        aria-label=\"Open Menu\"\r\n        size=\"medium\"\r\n        className={classes.hamburger}\r\n      >\r\n        <MenuRounded fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Drawer open={drawerOpen} onClose={closeDrawer}>\r\n        {DrawerItems()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(DrawerMenu);\r\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport const useMinScreenWidth = width => {\r\n  const width450 = useMediaQuery(\"(min-width:450px)\");\r\n  const width900 = useMediaQuery(\"(min-width:900px)\");\r\n  const width1200 = useMediaQuery(\"(min-width:1200px)\");\r\n\r\n  switch (width) {\r\n    case 450:\r\n      return width450;\r\n    case 900:\r\n      return width900;\r\n    case 1200:\r\n      return width1200;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  CssBaseline,\r\n  useScrollTrigger,\r\n  Box,\r\n  Slide,\r\n  Zoom,\r\n  Fab,\r\n  IconButton,\r\n  Tooltip,\r\n  makeStyles,\r\n  useMediaQuery\r\n} from \"@material-ui/core/\";\r\nimport {\r\n  KeyboardArrowUp,\r\n  ViewStream as Rows,\r\n  ViewWeek as Columns,\r\n  Favorite\r\n} from \"@material-ui/icons/\";\r\nimport DrawerMenu from \"../drawer/drawer\";\r\nimport { useMinScreenWidth } from \"../../helpers/CustomHooks/useMinScreenWidth\";\r\nimport PngLogo from \"../../assets/pngLogo.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    color: \"red\",\r\n    width: \"100px\"\r\n  },\r\n  icons_container: {\r\n    display: \"flex\"\r\n  },\r\n  logo_container: {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  favorites: {\r\n    color: \"#ff0000\"\r\n  }\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const trigger = useScrollTrigger();\r\n  return (\r\n    <Slide\r\n      appear={false}\r\n      direction=\"down\"\r\n      /* if appBarHide is true hide the appbar otherwise leave useScrollTrigger to deal with it */\r\n      in={props.appBarHide ? false : !trigger}\r\n    >\r\n      {props.children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nfunction ScrollTop(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 100\r\n  });\r\n\r\n  const handleClick = event => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nexport default function HideAppBar(props) {\r\n  const classes = useStyles();\r\n  const smSceen = useMediaQuery(\"(max-width:450px)\");\r\n  console.log(props.location);\r\n  const scrollToTop = event => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll appBarHide={props.appBarHide} {...props}>\r\n        <AppBar>\r\n          <Toolbar disableGutters={useMinScreenWidth(900) ? false : true}>\r\n            {!useMinScreenWidth(900) && (\r\n              <DrawerMenu\r\n                searchFlikr={props.searchFlikr}\r\n                handleMyLocationClick={props.handleMyLocationClick}\r\n                togglePhotoMarkerDisplay={props.togglePhotoMarkerDisplay}\r\n                toggleFavorites={props.toggleFavorites}\r\n                displayPhotoMarkers={props.displayPhotoMarkers}\r\n                displayFavorites={props.displayFavorites}\r\n              />\r\n            )}\r\n\r\n            <div className={classes.logo_container} onClick={scrollToTop}>\r\n              <img\r\n                src={PngLogo}\r\n                aria-label=\"World Gallery Logo\"\r\n                alt=\"World Gallery Logo\"\r\n                style={{ marginRight: \"0.5rem\", height: \"45px\" }}\r\n              />\r\n              <Typography variant=\"h6\">\r\n                <span style={{ color: \"#dedee6\" }}>World</span>\r\n                <span style={{ color: \"#ffc1d5\" }}>Gallery</span>\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.grow} />\r\n            <div className={classes.icons_container}>\r\n              {props.photos > 0 && !smSceen && (\r\n                <Tooltip\r\n                  title={\r\n                    props.gridDirection === \"column\"\r\n                      ? \"Display images as Rows\"\r\n                      : \"Display images as Columns\"\r\n                  }\r\n                  aria-label={\r\n                    props.gridDirection === \"column\"\r\n                      ? \"Display images as Rows\"\r\n                      : \"Display images as Columns\"\r\n                  }\r\n                >\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    onClick={props.toggleGridDirection}\r\n                  >\r\n                    {props.gridDirection === \"column\" ? (\r\n                      <>\r\n                        <Rows className={classes.control_icon} />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Columns className={classes.control_icon} />\r\n                      </>\r\n                    )}\r\n                  </IconButton>\r\n                </Tooltip>\r\n              )}\r\n\r\n              <Tooltip title=\"Open Favorites\" aria-label=\"Open Favorites\">\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"Open Favorites\"\r\n                  onClick={props.handleOpenFavorites}\r\n                >\r\n                  <Favorite className={classes.favorites} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Box\r\n        style={\r\n          useMinScreenWidth(1200)\r\n            ? { margin: \"5px 25px 2px\" }\r\n            : { margin: \"5px 0 2px\" }\r\n        }\r\n      >\r\n        {props.children}\r\n      </Box>\r\n      <ScrollTop {...props}>\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUp />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Fab, makeStyles, Zoom } from \"@material-ui/core\";\r\nimport { Favorite, FavoriteBorder, MoreVert } from \"@material-ui/icons\";\r\nimport StateContext from \"../../context/stateContext\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pin_to_map_btn: {\r\n    position: \"absolute\",\r\n    bottom: \"2px\",\r\n    left: \"2px\",\r\n    backgroundColor: \"#f500577a\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0px 0px 11px 0px rgba(0,0,0,0.75)\"\r\n    }\r\n  },\r\n  options_btn: {\r\n    top: \"2px\",\r\n    right: \"2px\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"#ffffffa6\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f5f5f5e8\",\r\n      boxShadow: \"0px 0px 11px 0px rgba(0,0,0,0.75)\"\r\n    }\r\n  },\r\n  image: {\r\n    margin: \"2px\",\r\n    display: \"block\"\r\n  }\r\n}));\r\n\r\nconst ImageWrapper = ({\r\n  index,\r\n  photo,\r\n  margin,\r\n  direction,\r\n  top,\r\n  left,\r\n  imageToggleFavorites,\r\n  openLightbox,\r\n  handleOpenMenuClick\r\n}) => {\r\n  const classes = useStyles();\r\n  const state = useContext(StateContext);\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const isFavorite = React.useMemo(\r\n    () =>\r\n      state.favorites.find(el => el.photoId === photo.photoId) ? true : false,\r\n    [state.favorites, photo.photoId]\r\n  );\r\n\r\n  const cont = {\r\n    backgroundColor: \"#eee\",\r\n    cursor: \"pointer\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\"\r\n  };\r\n\r\n  const handleOnMouseEnter = (photo, e) => {\r\n    setHover(true);\r\n  };\r\n  const handleOnMouseLeave = (photo, e) => {\r\n    setHover(false);\r\n  };\r\n\r\n  const handleTouch = () => {\r\n    setHover(true);\r\n    window.setTimeout(() => {\r\n      setHover(false);\r\n    }, 3000);\r\n  };\r\n\r\n  console.log(direction);\r\n  if (direction === \"column\") {\r\n    cont.position = \"absolute\";\r\n    cont.left = left;\r\n    cont.top = top;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"Image Wrapper updated\");\r\n  }, [\r\n    index,\r\n    photo,\r\n    margin,\r\n    direction,\r\n    top,\r\n    left,\r\n    // selected,\r\n    imageToggleFavorites,\r\n    openLightbox,\r\n    handleOpenMenuClick\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Image Wrapper updated Because state changed\");\r\n  // }, [state]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Image Wrapper updated Because REASONS\");\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin,\r\n        height: photo.height,\r\n        width: photo.width,\r\n        ...cont\r\n      }}\r\n      className={classes.container}\r\n      onMouseEnter={handleOnMouseEnter.bind(this, photo)}\r\n      onMouseLeave={handleOnMouseLeave}\r\n      onTouchStart={handleTouch}\r\n    >\r\n      <img\r\n        src={photo.src}\r\n        title={\r\n          photo.title\r\n            ? photo.title + ` - by user ${photo.ownername}`\r\n            : `untitled - by user ${photo.ownername}`\r\n        }\r\n        alt={photo.alt}\r\n        srcSet={photo.srcSet}\r\n        width={photo.width}\r\n        heigth={photo.height}\r\n        sizes={photo.sizes}\r\n        className={classes.image}\r\n        onClick={event => openLightbox.call(this, event, { index, photo })}\r\n      />\r\n      <Zoom in={hover}>\r\n        <Fab\r\n          size=\"small\"\r\n          aria-label=\"more\"\r\n          className={classes.options_btn}\r\n          onClick={handleOpenMenuClick.bind(this, photo)}\r\n        >\r\n          <MoreVert />\r\n        </Fab>\r\n      </Zoom>\r\n\r\n      <Zoom in={hover}>\r\n        <Fab\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          aria-label={isFavorite ? \"remove from favorites\" : \"add to favorites\"}\r\n          className={classes.pin_to_map_btn}\r\n          onClick={imageToggleFavorites.bind(this, photo, isFavorite)}\r\n        >\r\n          {isFavorite ? (\r\n            <Favorite style={{ color: \"gold\" }} />\r\n          ) : (\r\n            <FavoriteBorder style={{ color: \"#000\" }} />\r\n          )}\r\n        </Fab>\r\n      </Zoom>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageWrapper);\r\n","import React, { useContext } from \"react\";\r\nimport { Menu, MenuItem, Link } from \"@material-ui/core/\";\r\nimport DispatchContext from \"../../context/dispatchContext\";\r\nimport { BLOCK_USER } from \"../../context/rootReducer\";\r\n\r\nconst linkStyle = {\r\n  width: \"100%\"\r\n};\r\n\r\nexport default function ImageMenu(props) {\r\n  const dispatch = useContext(DispatchContext);\r\n\r\n  const handleHideUser = () => {\r\n    props.handleMenuClose();\r\n    dispatch({\r\n      type: BLOCK_USER,\r\n      userId: props.photoData.owner\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu\r\n        id=\"image-menu\"\r\n        anchorEl={props.anchorEl}\r\n        keepMounted\r\n        open={Boolean(props.anchorEl)}\r\n        onClose={props.handleMenuClose}\r\n      >\r\n        {!props.openFavorites && (\r\n          <MenuItem onClick={handleHideUser}>\r\n            Temporary hide photos from this user\r\n          </MenuItem>\r\n        )}\r\n        <MenuItem onClick={props.handleMenuClose}>\r\n          <Link\r\n            style={linkStyle}\r\n            target=\"_blank\"\r\n            href={\r\n              props.photoData\r\n                ? `https://www.flickr.com/photos/${props.photoData.owner}/${props.photoData.photoId}`\r\n                : \"\"\r\n            }\r\n            color=\"inherit\"\r\n          >\r\n            Open Photo in Flickr\r\n          </Link>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport ImageWrapper from \"../imageWrapper/imageWrapper\";\r\nimport ImageMenu from \"../imageWrapper/imageMenu\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst ImageGrid = ({\r\n  photos,\r\n  responseDetails,\r\n  direction,\r\n  imageToggleFavorites,\r\n  hiddenPhotos,\r\n  openLightbox,\r\n  openFavorites\r\n}) => {\r\n  React.useEffect(() => {\r\n    //debugging\r\n    console.log(\"IMAGE GRID: some props Caused Rerender!!!!!\");\r\n  }, [photos, responseDetails, direction, imageToggleFavorites, hiddenPhotos]);\r\n\r\n  console.log(\"IMAGEGRID UPDATED!\");\r\n\r\n  /** ImageMenu */\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [photoData, setPhotoData] = useState(null);\r\n  const handleOpenMenuClick = (data, event) => {\r\n    setPhotoData(data);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  /**Wrapper around ImageWrapper */\r\n  const imageRenderer = useCallback(\r\n    props => {\r\n      return (\r\n        <ImageWrapper\r\n          key={props.key}\r\n          margin={\"2px\"}\r\n          index={props.index}\r\n          photo={props.photo}\r\n          left={props.left}\r\n          top={props.top}\r\n          imageToggleFavorites={imageToggleFavorites}\r\n          direction={props.direction}\r\n          openLightbox={props.onClick}\r\n          handleOpenMenuClick={handleOpenMenuClick}\r\n          openFavorites={openFavorites}\r\n        />\r\n      );\r\n    },\r\n    [imageToggleFavorites, openFavorites]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {openFavorites ? (\r\n        <>\r\n          <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\r\n            {photos.length === 0\r\n              ? \"Favorites is empty\"\r\n              : `${photos.length} photos in favorites:`}\r\n          </Typography>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Typography\r\n            variant=\"h3\"\r\n            component=\"h1\"\r\n            style={{ marginTop: \"1.9rem\" }}\r\n          >\r\n            Results:\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\r\n            {photos.length === 0\r\n              ? `Sorry could not find any photos in that particular area`\r\n              : `Displaying ${photos.length} of total ${responseDetails.totalPhotos} photos found...`}\r\n          </Typography>\r\n        </>\r\n      )}\r\n\r\n      {hiddenPhotos.length > 0 && (\r\n        <Typography variant=\"subtitle2\" component=\"p\" gutterBottom>\r\n          ({hiddenPhotos.length}) photos from blocked users are hidden.\r\n        </Typography>\r\n      )}\r\n\r\n      {photos.length > 0 && (\r\n        <Gallery\r\n          photos={photos}\r\n          direction={direction}\r\n          renderImage={imageRenderer}\r\n          onClick={openLightbox}\r\n          // the above onClick is an optional react-photo-gallery prop\r\n          // It receives the arguments -> event and an object containing the index,\r\n          // Photos obj originally sent and the next and previous photos in the gallery if they exist\r\n        />\r\n      )}\r\n\r\n      <ImageMenu\r\n        anchorEl={anchorEl}\r\n        handleOpenMenuClick={handleOpenMenuClick}\r\n        handleMenuClose={handleMenuClose}\r\n        photoData={photoData}\r\n        openFavorites={openFavorites}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageGrid);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: \"1rem auto\",\r\n    display: \"block\"\r\n  }\r\n}));\r\n\r\nconst LoadMoreButton = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      onClick={props.onClick}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      className={classes.button}\r\n    >\r\n      Load more photos\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadMoreButton;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: \"0.5rem 0\"\r\n  }\r\n});\r\n\r\nexport default function LoadingBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  InputAdornment,\r\n  Divider,\r\n  InputBase,\r\n  IconButton\r\n} from \"@material-ui/core/\";\r\nimport StateContext from \"../../../context/stateContext\";\r\nimport { Close, Search as SearchIcon } from \"@material-ui/icons/\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    border: \"1px solid #29272752\"\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nexport default function LocationSearch() {\r\n  const classes = useStyles();\r\n  const store = useContext(StateContext);\r\n  const autoCompleteInputRef = useRef(null);\r\n\r\n  let geocoder = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (store.mapLoaded) {\r\n      geocoder.current = new window.google.maps.Geocoder();\r\n    }\r\n  }, [store.mapLoaded]);\r\n\r\n  let autocomplete = useRef(null);\r\n  const fillInInput = React.useCallback(() => {\r\n    geocodeAddress(geocoder.current, window.map);\r\n  }, [geocoder]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"USEFFECT ON MOUNT(***********************************)\");\r\n    if (store.mapLoaded) {\r\n      autocomplete.current = new window.google.maps.places.Autocomplete(\r\n        autoCompleteInputRef.current //input element that will be handled to AutoComplete\r\n        // { types: [\"geocode\"] } // If no type is specified, all types will be returned (eg places, addresses etc).\r\n      );\r\n      // Avoid paying for data that you don't need by restricting the set of\r\n      // place fields that are returned to just the address components & the formatted_address.\r\n      autocomplete.current.setFields([\r\n        \"address_component\",\r\n        \"formatted_address\"\r\n      ]);\r\n\r\n      // When the user selects an address from the drop-down,\r\n      autocomplete.current.addListener(\"place_changed\", fillInInput);\r\n    }\r\n  }, [fillInInput, store.mapLoaded]);\r\n\r\n  function geocodeAddress(geocoder, resultsMap) {\r\n    const value = autoCompleteInputRef.current.value;\r\n    geocoder.geocode({ address: value }, function(results, status) {\r\n      if (status === \"OK\") {\r\n        resultsMap.fitBounds(results[0].geometry.viewport);\r\n        // const marker = new window.google.maps.Marker({\r\n        //   map: resultsMap,\r\n        //   position: results[0].geometry.location\r\n        // });\r\n      } else {\r\n        alert(\"Geocode was not successful for the following reason: \" + status);\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    geocodeAddress(geocoder.current, window.map);\r\n  };\r\n\r\n  const clearInput = () => {\r\n    autoCompleteInputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={2}>\r\n      <form onSubmit={handleSubmit} className={classes.form}>\r\n        {/* InputBase is an uncontrolled component so that   google's autocomplete can change its value */}\r\n        <InputBase\r\n          disabled={!store.mapLoaded}\r\n          id=\"autocomplete\"\r\n          inputRef={autoCompleteInputRef}\r\n          className={classes.input}\r\n          placeholder=\"Search address or location\"\r\n          inputProps={{ \"aria-label\": \"search google maps\" }}\r\n          defaultValue=\"\"\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"clear search google maps input\"\r\n                onClick={clearInput}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <Divider className={classes.divider} orientation=\"vertical\" />\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n          disabled={!store.mapLoaded}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Typography\r\n} from \"@material-ui/core/\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport GeoCodingBar from \"./geoCodingBar/geoCodingBar.js\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  details_root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\"\r\n  },\r\n  details_root_geolocation: {\r\n    padding: \"4px\",\r\n    marginBottom: \"12px\"\r\n  }\r\n}));\r\n\r\nexport default function ExpansionPanels(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"geolocation-search\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Geolocation search\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails\r\n          id=\"geolocation-search\"\r\n          classes={{ root: classes.details_root_geolocation }}\r\n        >\r\n          <GeoCodingBar />\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"request-options-content\"\r\n        >\r\n          <Typography className={classes.heading}>Query Options</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails\r\n          id=\"request-options-content\"\r\n          classes={{ root: classes.details_root }}\r\n        >\r\n          {props.requestOptions}\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"map-options-content\"\r\n        >\r\n          <Typography className={classes.heading}>Map Options</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails\r\n          id=\"map-options-content\"\r\n          classes={{ root: classes.details_root }}\r\n        >\r\n          {props.mapOptions}\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, memo } from \"react\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport { ImageSearchRounded, MyLocationTwoTone } from \"@material-ui/icons\";\r\nimport SelectSortingMethod from \"./selectSortingMethod\";\r\nimport TextQuery from \"./textQuery\";\r\nimport CustomSwitch from \"./switches/customSwitch\";\r\nimport RequstNumberSlider from \"./requestsNumberSlider\";\r\nimport OptionsPanel from \"./expansionPanels\";\r\nimport MinUploadDatePicker from \"./datePickers/minUploadDatePicker\";\r\nimport MaxUploadDatePicker from \"./datePickers/maxUploadDatePicker\";\r\nimport MaxTakenDatePicker from \"./datePickers/maxTakenDatePicker\";\r\nimport MinTakenDatePicker from \"./datePickers/minTakenDatePicker\";\r\nimport StateContext from \"../../context/stateContext\";\r\nimport QueryContext from \"../../context/QueryContext/queryContext\";\r\nimport LoadingBar from \"../LoadingBar/loadingBar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  panel: {\r\n    textAlign: \"center\",\r\n    maxWidth: \"40vw\",\r\n    width: \"40vw\",\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    overflowY: \"scroll\"\r\n  },\r\n  panel_item: {\r\n    margin: \"8px\",\r\n    display: \"flex\"\r\n  },\r\n  wrapper: {\r\n    margin: \"0.5rem\"\r\n  },\r\n  divider: {\r\n    margin: \"1rem 0\"\r\n  },\r\n  control_icon: {\r\n    marginRight: \"1rem\"\r\n  },\r\n  search_photos_box: {\r\n    justifyContent: \"center\"\r\n  },\r\n  map_options_container: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    textAlign: \"left\"\r\n  }\r\n}));\r\n\r\nconst ControlPanel = props => {\r\n  const store = useContext(StateContext);\r\n  const queryStore = useContext(QueryContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const infoTextBox = `Zoom to the location that you want to search for photos and hit the search button.`;\r\n\r\n  return (\r\n    <Paper className={classes.panel}>\r\n      <div className={classes.wrapper}>\r\n        {queryStore.searchMethod === \"EXTENTS\" && (\r\n          <>\r\n            <Box className={classes.panel_item}>\r\n              <Typography>{infoTextBox}</Typography>\r\n            </Box>\r\n            <Box className={classes.panel_item + classes.search_photos_box}>\r\n              <Button\r\n                disabled={!store.mapLoaded}\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#179207\", width: \"100%\" }}\r\n                size={\"large\"}\r\n                onClick={props.searchFlikr}\r\n              >\r\n                <ImageSearchRounded className={classes.control_icon} />\r\n                Search Photos\r\n              </Button>\r\n              {props.loadingPhotos && <LoadingBar />}\r\n            </Box>\r\n          </>\r\n        )}\r\n\r\n        <Divider className={classes.divider} />\r\n\r\n        <OptionsPanel\r\n          requestOptions={\r\n            <>\r\n              <RequstNumberSlider />\r\n              <SelectSortingMethod />\r\n              <TextQuery searchFlikr={props.searchFlikr} />\r\n              <Divider className={classes.divider} />\r\n              <MinUploadDatePicker />\r\n              <MaxUploadDatePicker />\r\n              <Divider className={classes.divider} />\r\n              <MinTakenDatePicker />\r\n              <MaxTakenDatePicker />\r\n            </>\r\n          }\r\n          mapOptions={\r\n            <div className={classes.map_options_container}>\r\n              <CustomSwitch\r\n                callback={props.togglePhotoMarkerDisplay}\r\n                checked={props.displayPhotoMarkers}\r\n                label=\"Hide all results from map\"\r\n              />\r\n              <CustomSwitch\r\n                callback={props.toggleFavorites}\r\n                checked={props.displayFavorites}\r\n                label=\"Hide all favorites from map\"\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginTop: \"1rem\", color: \"black\" }}\r\n                color=\"secondary\"\r\n                size={\"large\"}\r\n                onClick={props.handleMyLocationClick}\r\n                disabled={!store.mapLoaded}\r\n              >\r\n                <MyLocationTwoTone style={{ marginRight: \"1rem\" }} />\r\n                My location\r\n              </Button>\r\n            </div>\r\n          }\r\n        ></OptionsPanel>\r\n\r\n        <Box className={classes.panel_item}>{props.children}</Box>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default memo(ControlPanel);\r\n","import React, { useContext } from \"react\";\r\nimport { Paper, makeStyles, Button, Tooltip } from \"@material-ui/core\";\r\nimport { ImageSearchRounded } from \"@material-ui/icons\";\r\nimport QueryContext from \"../../context/QueryContext/queryContext\";\r\nimport LocationSearch from \"./geoCodingBar/geoCodingBar\";\r\nimport LoadingBar from \"../LoadingBar/loadingBar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  panel: {\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexFlow: \"column\"\r\n  },\r\n  wrapper: {\r\n    margin: \"0 0.5rem\"\r\n  },\r\n  control_icon: {\r\n    marginRight: \"1rem\"\r\n  },\r\n  search_btn_box: {\r\n    margin: \"0.5rem 0\",\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nconst ControlPanelMobile = props => {\r\n  const classes = useStyles();\r\n  const store = useContext(QueryContext);\r\n\r\n  const infoTextBox = `Zoom to the location that you want to search for photos and hit the search button.`;\r\n\r\n  return (\r\n    <Paper className={classes.panel}>\r\n      <div className={classes.wrapper}>\r\n        {store.searchMethod === \"EXTENTS\" && (\r\n          <>\r\n            <div style={{ marginTop: \"5px\" }}>{infoTextBox}</div>\r\n            <LocationSearch />\r\n            <Tooltip title=\"Search Photos\" aria-label=\"Search Photos\">\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#179207\" }}\r\n                size=\"large\"\r\n                onClick={props.searchFlikr}\r\n                className={classes.search_btn_box}\r\n              >\r\n                <ImageSearchRounded className={classes.control_icon} />\r\n                Search Photos\r\n              </Button>\r\n            </Tooltip>\r\n            {props.loadingPhotos && <LoadingBar />}\r\n          </>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ControlPanelMobile;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Tooltip,\r\n  useMediaQuery\r\n} from \"@material-ui/core/\";\r\nimport {\r\n  ViewStream as Rows,\r\n  ViewWeek as Columns,\r\n  Close as CloseIcon\r\n} from \"@material-ui/icons/\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport StateContext from \"../../context/stateContext\";\r\nimport ImageGrid from \"../imageGrid/imageGrid\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  title: {\r\n    flex: 1\r\n  },\r\n  direction_btn: {\r\n    margin: \"0 1rem\"\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction FavoritesDialog(props) {\r\n  const classes = useStyles();\r\n  const store = useContext(StateContext);\r\n  const smSceen = useMediaQuery(\"(max-width:450px)\");\r\n\r\n  const [gridDirection, setGridDirection] = useState(\"row\");\r\n  const toggleGridDirection = () => {\r\n    setGridDirection(gridDirection === \"row\" ? \"column\" : \"row\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.onpopstate = () => {\r\n      console.log(\"props.history.location.pathname:\");\r\n      console.log(props.history.location.pathname);\r\n      if (props.history.location.pathname === \"/\" && props.openFavorites) {\r\n        props.handleCloseFavorites();\r\n      }\r\n    };\r\n  });\r\n\r\n  const handleClose = () => {\r\n    props.handleCloseFavorites();\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={props.openFavorites}\r\n        // onClose={props.handleCloseFavorites}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" component=\"h1\" className={classes.title}>\r\n              Favorites\r\n            </Typography>\r\n            {store.favorites.length > 0 && !smSceen && (\r\n              <Tooltip\r\n                title={\r\n                  gridDirection === \"column\"\r\n                    ? \"Display images as Rows\"\r\n                    : \"Display images as Columns\"\r\n                }\r\n                aria-label={\r\n                  gridDirection === \"column\"\r\n                    ? \"Display images as Rows\"\r\n                    : \"Display images as Columns\"\r\n                }\r\n              >\r\n                <IconButton\r\n                  className={classes.direction_btn}\r\n                  color=\"inherit\"\r\n                  onClick={toggleGridDirection}\r\n                >\r\n                  {gridDirection === \"column\" ? (\r\n                    <>\r\n                      <Rows className={classes.control_icon} />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Columns className={classes.control_icon} />\r\n                    </>\r\n                  )}\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={props.handleCloseFavorites}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {store.favorites && (\r\n          <ImageGrid\r\n            photos={store.favorites}\r\n            hiddenPhotos={store.hiddenPhotos}\r\n            responseDetails={props.responseDetails}\r\n            direction={smSceen ? \"column\" : gridDirection}\r\n            imageToggleFavorites={props.imageToggleFavorites}\r\n            openLightbox={props.openLightbox}\r\n            openFavorites={props.openFavorites}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(FavoritesDialog);\r\n","/** in case window.map is undefined (not loaded/initialized):\r\n * mapWait() checks if google.maps is loaded before trying to access the window.map object\r\n * each time the check results to false it retries after 10ms, when the waitingTrheshold (3seconds) runs out it gives up\r\n * (at this point google maps probably failed for some other reason, like network error, or auth problems...)\r\n */\r\nexport const mapReady = cb => {\r\n  let waitingThreshold = 3000; //max number of milliseconds to wait for google.maps to initialize\r\n\r\n  const mapWait = () => {\r\n    if (waitingThreshold <= 0) {\r\n      stopTimer();\r\n      // alert(\"google maps cannot be loaded!\"); display some error\r\n    }\r\n    if (window.map) {\r\n      cb();\r\n      stopTimer();\r\n    } else {\r\n      // console.log(\"waiting for maps....\");\r\n      waitingThreshold -= 10;\r\n    }\r\n  };\r\n  const timer = setInterval(mapWait, 10);\r\n  const stopTimer = () => clearInterval(timer);\r\n};\r\n\r\nexport const checkBoundsArea = bounds => {\r\n  // returns the area of map extents in sq km...\r\n  const boundsPath = [];\r\n  boundsPath.push(new window.google.maps.LatLng(bounds.south, bounds.west));\r\n  boundsPath.push(new window.google.maps.LatLng(bounds.south, bounds.east));\r\n  boundsPath.push(new window.google.maps.LatLng(bounds.north, bounds.east));\r\n  boundsPath.push(new window.google.maps.LatLng(bounds.north, bounds.west));\r\n\r\n  // return window.google.maps.geometry.spherical.computeArea(boundsPath) > 3 624 538 762 249;\r\n  return (\r\n    (\r\n      window.google.maps.geometry.spherical.computeArea(boundsPath) /\r\n      (1000 * 1000)\r\n    ).toFixed(2) + \" sq km\"\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport StateContext from \"../../context/stateContext\";\r\nimport { makeStyles, IconButton } from \"@material-ui/core\";\r\nimport {\r\n  Close,\r\n  Fullscreen,\r\n  FullscreenExit,\r\n  Favorite,\r\n  FavoriteBorder\r\n} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  header_container: {\r\n    position: \"absolute\",\r\n    top: \"2px\",\r\n    left: \"2px\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    zIndex: \"2000\",\r\n    justifyContent: \"space-between\", //\"flex-end\", to align btns to the right\r\n    transition: \"opacity 300ms\",\r\n    opacity: \"1\"\r\n  },\r\n  lightbox_btn: {\r\n    color: \"#fff\",\r\n    background: \"rgba(255, 255, 255, 0.2)\",\r\n    margin: \"2px\",\r\n    border: \"1px solid #00000024\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0px 0px 11px 0px rgba(0,0,0,0.75)\",\r\n      background: \"rgba(255, 255, 255, 0.3)\"\r\n    }\r\n  },\r\n  hide_on_idle: {\r\n    opacity: \"0\"\r\n  }\r\n}));\r\n\r\nconst LightBoxHeader = props => {\r\n  /*most props like carouselProps, interactionIsIdle etc are passed by default props react-photo-gallery*/\r\n  const classes = useStyles();\r\n  const store = useContext(StateContext);\r\n\r\n  const isFavorite = React.useMemo(\r\n    () =>\r\n      store.favorites.find(el => el.photoId === props.currentView.photoId)\r\n        ? true\r\n        : false,\r\n    [store.favorites, props.currentView.photoId]\r\n  );\r\n\r\n  return props.isModal ? (\r\n    <div\r\n      className={\r\n        props.interactionIsIdle\r\n          ? classes.header_container + \" \" + classes.hide_on_idle\r\n          : classes.header_container\r\n      }\r\n    >\r\n      <IconButton\r\n        aria-label=\"Pin photo on map\"\r\n        className={classes.lightbox_btn}\r\n        onClick={props.carouselProps.imageToggleFavorites.bind(\r\n          this,\r\n          props.data,\r\n          isFavorite\r\n        )}\r\n      >\r\n        {isFavorite ? (\r\n          <Favorite style={{ color: \"gold\" }} />\r\n        ) : (\r\n          <FavoriteBorder />\r\n        )}\r\n      </IconButton>\r\n\r\n      <div className={classes.btn_container_right}>\r\n        <IconButton\r\n          aria-label=\"toggle fullscreen\"\r\n          className={classes.lightbox_btn}\r\n          edge=\"start\"\r\n          onClick={props.modalProps.toggleFullscreen}\r\n        >\r\n          {props.modalProps.isFullscreen ? <FullscreenExit /> : <Fullscreen />}\r\n        </IconButton>\r\n\r\n        {!props.modalProps.isFullscreen && (\r\n          <IconButton\r\n            aria-label=\"Close\"\r\n            className={classes.lightbox_btn}\r\n            edge=\"start\"\r\n            onClick={props.modalProps.onClose}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default LightBoxHeader;\r\n","import React from \"react\";\r\n\r\nconst LightBoxViewRenderer = props => {\r\n  /** By default react-images carousel requests/loads all images that are passed to it\r\n   * this custom viewRenderer changes that behaviour and requests each image one by one when it's about to render it\r\n   * more on the issue:-->  https://github.com/jossmac/react-images/issues/300 */\r\n  const overScanCount = 1;\r\n  const { data, getStyles, index, currentIndex } = props;\r\n  const { alt, src } = data;\r\n\r\n  return Math.abs(currentIndex - index) <= overScanCount ? (\r\n    <div style={getStyles(\"view\", props)}>\r\n      <img\r\n        alt={alt || `Image ${index}`}\r\n        src={src}\r\n        style={{\r\n          height: \"auto\",\r\n          maxHeight: \"100vh\",\r\n          maxWidth: \"100%\",\r\n          userSelect: \"none\"\r\n        }}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default LightBoxViewRenderer;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Close, Error, CheckCircle, Warning } from \"@material-ui/icons/\";\r\nimport StateContext from \"../../context/stateContext\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  success: {\r\n    backgroundColor: \"#43a047\"\r\n  },\r\n  error: {\r\n    backgroundColor: \"#d32f2f\"\r\n  },\r\n  warning: {\r\n    backgroundColor: \"#ec8f06\"\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  icon: {\r\n    marginRight: \"5px\"\r\n  }\r\n}));\r\n\r\nexport default function Toast() {\r\n  const store = useContext(StateContext);\r\n  const classes = useStyles();\r\n  const Icon =\r\n    store.toast.variant === \"success\"\r\n      ? CheckCircle\r\n      : store.toast.variant === \"error\"\r\n      ? Error\r\n      : Warning;\r\n  const queueRef = React.useRef([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n\r\n  const processQueue = () => {\r\n    if (queueRef.current.length > 0) {\r\n      setMessageInfo(queueRef.current.shift());\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const message = store.toast.message;\r\n    if (message) {\r\n      queueRef.current.push({\r\n        message,\r\n        key: new Date().getTime()\r\n      });\r\n\r\n      if (open) {\r\n        // immediately begin dismissing current message\r\n        // to start showing new one\r\n        setOpen(false);\r\n      } else {\r\n        processQueue();\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [store.toast]);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    processQueue();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        key={messageInfo ? messageInfo.key : undefined}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={open}\r\n        autoHideDuration={3500}\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        TransitionComponent={SlideTransition}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\",\r\n          classes: {\r\n            root:\r\n              store.toast.variant === \"success\"\r\n                ? classes.success\r\n                : store.toast.variant === \"error\"\r\n                ? classes.error\r\n                : classes.warning\r\n          }\r\n        }}\r\n        message={\r\n          <span id=\"message-id\" className={classes.message}>\r\n            <Icon className={classes.icon} />\r\n            {messageInfo ? messageInfo.message : undefined}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AutoRotatingCarousel, Slide } from \"material-auto-rotating-carousel\";\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core/\";\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nimport SLIDE1 from \"../../assets/SLIDE1.png\";\r\nimport SLIDE2 from \"../../assets/SLIDE2.png\";\r\nimport SLIDE3 from \"../../assets/SLIDE3.png\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    maxHeight: \"700px\"\r\n  },\r\n  slide_text: {\r\n    maxWidth: \"90%\"\r\n  },\r\n  slide_text_mobile: {\r\n    paddingTop: \"8px\"\r\n  },\r\n  subtitle: {\r\n    color: \"#00024b\"\r\n  },\r\n  slide_title: {\r\n    whiteSpace: \"initial\",\r\n    lineHeight: \"23px\",\r\n    fontSize: \"22px\",\r\n    color: \"#00024b\"\r\n  },\r\n  image: {\r\n    maxWidth: \"100%\"\r\n  }\r\n}));\r\n\r\nconst CarouselShowCase = props => {\r\n  const classes = useStyles();\r\n  const smScreen = useMediaQuery(\"(max-width:450px)\");\r\n\r\n  return (\r\n    <div\r\n      style={{ position: \"relative\", width: \"100%\", height: 65 }}\r\n      className=\"wrapper\"\r\n    >\r\n      <AutoRotatingCarousel\r\n        mobile={smScreen}\r\n        autoplay={false}\r\n        // interval={4000}\r\n        label=\"Get Started\"\r\n        open={props.open}\r\n        onClose={props.closeCarousel}\r\n        onStart={props.closeCarousel}\r\n        style={{ position: \"absolute\", color: \"orange\" }}\r\n        // classes={{ content: classes.content }}\r\n      >\r\n        <Slide\r\n          media={\r\n            <img\r\n              src={SLIDE1}\r\n              alt=\"Flickr Api plus Maps\"\r\n              className={classes.image}\r\n            />\r\n          }\r\n          mediaBackgroundStyle={{ backgroundColor: green[400] }}\r\n          classes={{\r\n            textMobile: classes.slide_text_mobile,\r\n            text: classes.slide_text,\r\n            title: classes.slide_title,\r\n            subtitle: classes.subtitle\r\n          }}\r\n          style={{ backgroundColor: green[700] }}\r\n          title=\"Query Flickr's photos with one click\"\r\n          subtitle=\"World Gallery is a Web App that lets you query Flickr public photos by the location that they were taken.\"\r\n        />\r\n\r\n        <Slide\r\n          media={\r\n            <img\r\n              src={SLIDE3}\r\n              alt=\"Results are pinned on the Map\"\r\n              className={classes.image}\r\n            />\r\n          }\r\n          mediaBackgroundStyle={{ backgroundColor: green[400] }}\r\n          classes={{\r\n            textMobile: classes.slide_text_mobile,\r\n            text: classes.slide_text,\r\n            title: classes.slide_title,\r\n            subtitle: classes.subtitle\r\n          }}\r\n          style={{ backgroundColor: green[700] }}\r\n          title=\"Results are pinned on the spot they where taken*\"\r\n          subtitle={`*On average a photo taken with a camera with a GPS or a smartphone will have an error of 5-15 meters.\r\n              No spatial accuracy can be guaranteed for photos where geolocation was set explicitly.`}\r\n        />\r\n\r\n        <Slide\r\n          media={\r\n            <img\r\n              src={SLIDE2}\r\n              alt=\"Powered by Google Geocoding API, Place Autocomplete and Google Maps\"\r\n              className={classes.image}\r\n            />\r\n          }\r\n          mediaBackgroundStyle={{ backgroundColor: green[400] }}\r\n          classes={{\r\n            textMobile: classes.slide_text_mobile,\r\n            text: classes.slide_text,\r\n            title: classes.slide_title,\r\n            subtitle: classes.subtitle\r\n          }}\r\n          style={{ backgroundColor: green[700] }}\r\n          title=\"Geolocation search for easy localization\"\r\n          subtitle={`Powered by Google's Geocoding and Location Autocomplete to quickly center the desired\r\n           country, city, landmark, establishment or address on the map.`}\r\n        />\r\n      </AutoRotatingCarousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselShowCase;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  Suspense,\r\n  lazy\r\n} from \"react\";\r\nimport * as FlikrApi from \"./requests/flikr\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport StateContext from \"./context/stateContext\";\r\nimport DispatchContext from \"./context/dispatchContext\";\r\nimport QueryContext from \"./context/QueryContext/queryContext\";\r\nimport {\r\n  SET_USER_LOCATION,\r\n  SET_PHOTOS,\r\n  UPDATE_PHOTOS,\r\n  ADD_IMG_TO_FAVORITES,\r\n  REMOVE_IMG_FROM_FAVORITES,\r\n  SET_MAP_LOADED,\r\n  MAKE_TOAST\r\n} from \"./context/rootReducer\";\r\n\r\nimport Appbar from \"./components/appBar/appBar\";\r\nimport ImageGrid from \"./components/imageGrid/imageGrid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport LoadMoreButton from \"./components/controls/loadMoreBtn\";\r\nimport LoadingBar from \"./components/LoadingBar/loadingBar\";\r\nimport ControlPanel from \"./components/controlPanel/controlPanel\";\r\nimport ControlPanelMobile from \"./components/controlPanel/controlPanelMobile\";\r\nimport FavoritesDialog from \"./components/favorites/FavoritesDialog\";\r\nimport { mapReady } from \"./helpers/helpers\";\r\n\r\nimport LightBoxHeader from \"./components/lightboxComponents/lightboxHeader\";\r\nimport LightBoxViewRenderer from \"./components/lightboxComponents/lightboxViewRenderer\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { useMinScreenWidth } from \"./helpers/CustomHooks/useMinScreenWidth\";\r\nimport Toast from \"./components/toast/toast\";\r\n\r\nimport CarouselShowCase from \"./components/CarouselShowCase/carouselShowCase\";\r\nimport { useHistory, withRouter, Redirect } from \"react-router-dom\";\r\n\r\nconst MapWrapper = lazy(() => import(\"./components/map/mapContainer\"));\r\n\r\nconst navButtonStyles = base => ({\r\n  ...base,\r\n  background: \"rgba(255, 255, 255, 0.2)\",\r\n  \"&:hover, &:active\": {\r\n    boxShadow: \"0px 0px 11px 0px rgba(0,0,0,0.75)\",\r\n    background: \"rgba(255, 255, 255, 0.3)\"\r\n  },\r\n  \"&:active\": {\r\n    boxShadow: \"0 1px 3px rgba(0, 0, 0, 0.14)\",\r\n    transform: \"scale(0.96)\"\r\n  }\r\n});\r\n\r\nconst imagePositionerStyles = base => ({\r\n  ...base,\r\n  zIndex: \"5500\"\r\n});\r\nconst blanketStyles = base => ({\r\n  ...base,\r\n  zIndex: \"5000\"\r\n});\r\n\r\nfunction App(props) {\r\n  const store = useContext(StateContext);\r\n  const dispatch = useContext(DispatchContext);\r\n\r\n  const queryStore = useContext(QueryContext);\r\n\r\n  const smSceen = useMediaQuery(\"(max-width:450px)\");\r\n\r\n  /**Routing */\r\n  let history = useHistory();\r\n\r\n  /** Top user benefits (Auto Rotating Carousel) */\r\n  const [carouselOpen, setCarouselOpen] = useState(true);\r\n  const closeCarousel = () => setCarouselOpen(false);\r\n\r\n  /** Favorites Dialog */\r\n  const [openFavorites, setOpenFavorites] = useState(false);\r\n  const handleOpenFavorites = () => {\r\n    setOpenFavorites(true);\r\n    history.push(\"/favorites/\");\r\n  };\r\n\r\n  const handleCloseFavorites = () => {\r\n    setOpenFavorites(false);\r\n  };\r\n\r\n  /**LightBox */\r\n  /**explicitly hide appbar if the lightbox is open (prevents appbar overlay with image in lightbox) */\r\n  // const [appBarHide, setAppBarHide] = useState(false);\r\n\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightboxSinglePhoto = (event, { photo, index }) => {\r\n    // setAppBarHide(true);\r\n    setCurrentImage(0);\r\n    setViewerIsOpen({ photo });\r\n    history.push(\"/img-carousel/\");\r\n  };\r\n\r\n  const openLightbox = useCallback(\r\n    (event, { photo, index }) => {\r\n      // setAppBarHide(true);\r\n      setCurrentImage(index);\r\n      setViewerIsOpen(true);\r\n      // console.log(props.match.url);\r\n      // console.log(props.match.path);\r\n      // console.log(props.location);\r\n      // console.log(props.location.pathname);\r\n      console.log(\"history CHANGED RERENDERING APP\");\r\n\r\n      let path = \"/\";\r\n      switch (props.location.pathname) {\r\n        case \"/\":\r\n          path = \"/img-carousel/\";\r\n          break;\r\n        case \"/favorites/\":\r\n          path = \"/favorites/img-carousel/\";\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      history.push(path);\r\n    },\r\n    [\r\n      //setAppBarHide,\r\n      history,\r\n      props.location.pathname\r\n    ]\r\n  );\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n    // setAppBarHide(false);\r\n    history.goBack();\r\n  };\r\n\r\n  /** End LightBox */\r\n  const setMapLoaded = () => {\r\n    dispatch({\r\n      type: SET_MAP_LOADED,\r\n      mapLoaded: true\r\n    });\r\n  };\r\n\r\n  /** If request is successfull window will zoom to resultsRef */\r\n  const resultsRef = React.useRef(null);\r\n\r\n  const [loadingPhotos, setLoadingPhotos] = useState(false);\r\n\r\n  const [responseDetails, setResponseDetails] = useState(null);\r\n\r\n  const [gridDirection, setGridDirection] = useState(\"row\");\r\n  const toggleGridDirection = () => {\r\n    setGridDirection(gridDirection === \"row\" ? \"column\" : \"row\");\r\n  };\r\n\r\n  /** Markers trigger */\r\n  const [displayPhotoMarkers, setDisplayPhotoMarkers] = useState(true);\r\n  const togglePhotoMarkerDisplay = useCallback(() => {\r\n    setDisplayPhotoMarkers(!displayPhotoMarkers);\r\n  }, [setDisplayPhotoMarkers, displayPhotoMarkers]);\r\n\r\n  const [displayFavorites, setDisplayFavorites] = useState(true);\r\n  const toggleFavorites = () => setDisplayFavorites(!displayFavorites);\r\n\r\n  const imageToggleFavorites = useCallback(\r\n    (img, isFavorite) => {\r\n      console.log(isFavorite);\r\n      if (!isFavorite) {\r\n        dispatch({\r\n          type: ADD_IMG_TO_FAVORITES,\r\n          image: img\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: REMOVE_IMG_FROM_FAVORITES,\r\n          image: img\r\n        });\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const searchFlikr = () => {\r\n    console.log(\"fetching...\");\r\n    let searchParams;\r\n    // switch (queryStore.searchMethod) {\r\n    // case \"EXTENTS\":\r\n    const bounds = window.map ? window.map.getBounds().toJSON() : \"error\";\r\n    searchParams = {\r\n      searchMethod: queryStore.searchMethod,\r\n      minUploadDate: queryStore.minUploadDate,\r\n      maxUploadDate: queryStore.maxUploadDate,\r\n      minTakenDate: queryStore.minTakenDate,\r\n      maxTakenDate: queryStore.maxTakenDate,\r\n      resultsPerPage: queryStore.resultsPerPage,\r\n      sortMethod: queryStore.sortMethod,\r\n      searchText: queryStore.searchText,\r\n      bounds\r\n    };\r\n    //     break;\r\n    //   default:\r\n    //     console.log(\"invalid searchMethod\");\r\n    //     return;\r\n    // }\r\n\r\n    setLoadingPhotos(true);\r\n    FlikrApi.getPhotosByTitle(searchParams)\r\n      .then(data => {\r\n        setLoadingPhotos(false);\r\n        // console.log(data);\r\n        if (data.stat === \"ok\") {\r\n          setResponseDetails({\r\n            ...data\r\n          });\r\n          dispatch({\r\n            type: SET_PHOTOS,\r\n            photos: data.photos\r\n          });\r\n\r\n          /* if scrollIntoView is called syncronously there is a chance that the images are not loaded yet\r\n           * thus the body is still the same height and the element simply cannot be scrolled to. instead:\r\n           *  When the response is loaded wait 100ms for the body to resize (while image gallery loads),\r\n           * then scroll to the results (an empty div right above the results was used in order to avoid forwardingRefs)         *\r\n           */\r\n          window.setTimeout(() => {\r\n            resultsRef.current.scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"center\"\r\n            });\r\n          }, 100);\r\n        } else {\r\n          switch (data.code) {\r\n            /**Check the error code and respond with an appropriete notification */\r\n            case 4:\r\n              /**message:Not a valid bounding box --> Antimeridian Error */\r\n              dispatch({\r\n                type: MAKE_TOAST,\r\n                message: `Your location search intersects with antimeridian!\r\n                Make sure that the red vertical line is out of map extents`,\r\n                variant: \"error\"\r\n              });\r\n              break;\r\n            case 9999:\r\n              /**message: Failed to fetch --> No Internet connection */\r\n              dispatch({\r\n                type: MAKE_TOAST,\r\n                message: `Failed to fetch, please check your internet connection`,\r\n                variant: \"error\"\r\n              });\r\n              break;\r\n            default:\r\n              /**Default returns any other flickr's API errors messages  */\r\n              dispatch({\r\n                type: MAKE_TOAST,\r\n                message: data.message,\r\n                variant: \"error\"\r\n              });\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setLoadingPhotos(false);\r\n        dispatch({\r\n          type: MAKE_TOAST,\r\n          message: error.message,\r\n          variant: \"error\"\r\n        });\r\n      });\r\n  };\r\n\r\n  const fetchNextPage = () => {\r\n    console.log(\"fetching next page...\");\r\n\r\n    const searchParams = {\r\n      ...responseDetails,\r\n      resultsPerPage: responseDetails.perPage\r\n    };\r\n    if (responseDetails.currentPage < responseDetails.totalPages) {\r\n      searchParams.page = responseDetails.currentPage + 1;\r\n    }\r\n    // console.log(searchParams);\r\n    setLoadingPhotos(true);\r\n\r\n    FlikrApi.getPhotosByTitle(searchParams)\r\n      .then(data => {\r\n        setLoadingPhotos(false);\r\n\r\n        setResponseDetails({\r\n          ...data\r\n        });\r\n        dispatch({\r\n          type: UPDATE_PHOTOS,\r\n          photos: data.photos\r\n        });\r\n      })\r\n      .catch(error => {\r\n        setLoadingPhotos(false);\r\n      });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   //debugging only\r\n  //   console.log(store);\r\n  //   console.log(responseDetails); // IF RESPONSE DETAILS RETURNS ERROR THE APP CAN CRASH\r\n  // }, [store, responseDetails]);\r\n\r\n  useEffect(\r\n    () => {\r\n      /*fetch user location when app mounts*/\r\n      fetch(\"https://geoip-db.com/json/42e6a770-b3ac-11e9-80ca-c95181800da7\")\r\n        .then(res => res.json())\r\n        .then(position => {\r\n          dispatch({\r\n            type: SET_USER_LOCATION,\r\n            userLocation: { lat: position.latitude, lng: position.longitude }\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const zoomToLocation = location => {\r\n    const zoom = () => {\r\n      window.map.panTo(location);\r\n      window.map.setZoom(16);\r\n    };\r\n    mapReady(zoom);\r\n  };\r\n\r\n  const handleMyLocationClick = () => {\r\n    if (store.userLocation) {\r\n      zoomToLocation(store.userLocation);\r\n    } else {\r\n      /* if geoip-db call failed or if it was blocked by an add-blocker use native geolocation API */\r\n      const success = position => {\r\n        zoomToLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        });\r\n        dispatch({\r\n          type: SET_USER_LOCATION,\r\n          userLocation: {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          }\r\n        });\r\n      };\r\n      if (\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition(success, err =>\r\n          console.log(err)\r\n        );\r\n      } else {\r\n        alert(\"Sorry geolocation is not supported by your broweser.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Appbar\r\n        // appBarHide={appBarHide}\r\n        photos={responseDetails ? responseDetails.totalPages : 0}\r\n        toggleGridDirection={toggleGridDirection}\r\n        gridDirection={gridDirection}\r\n        searchFlikr={searchFlikr}\r\n        handleMyLocationClick={handleMyLocationClick}\r\n        togglePhotoMarkerDisplay={togglePhotoMarkerDisplay}\r\n        toggleFavorites={toggleFavorites}\r\n        displayPhotoMarkers={displayPhotoMarkers}\r\n        displayFavorites={displayFavorites}\r\n        handleOpenFavorites={handleOpenFavorites}\r\n        {...props}\r\n      >\r\n        <section\r\n          style={\r\n            useMinScreenWidth(900)\r\n              ? { display: \"flex\", height: \"calc(100vh - 7px - 64px)\" } //7px margins, 64appbar\r\n              : {\r\n                  display: \"flex\",\r\n                  height: \"calc(100vh - 7px - 64px )\",\r\n                  flexFlow: \"column\"\r\n                }\r\n          }\r\n        >\r\n          {useMinScreenWidth(900) && (\r\n            <ControlPanel\r\n              searchFlikr={searchFlikr}\r\n              loadingPhotos={loadingPhotos}\r\n              togglePhotoMarkerDisplay={togglePhotoMarkerDisplay}\r\n              toggleFavorites={toggleFavorites}\r\n              displayPhotoMarkers={displayPhotoMarkers}\r\n              displayFavorites={displayFavorites}\r\n              handleMyLocationClick={handleMyLocationClick}\r\n            ></ControlPanel>\r\n          )}\r\n          {!useMinScreenWidth(900) && (\r\n            <ControlPanelMobile\r\n              searchFlikr={searchFlikr}\r\n              loadingPhotos={loadingPhotos}\r\n            />\r\n          )}\r\n          <Suspense fallback={<Skeleton variant=\"rect\" />}>\r\n            <MapWrapper\r\n              setMapLoaded={setMapLoaded}\r\n              photos={store.filteredPhotos}\r\n              favorites={store.favorites}\r\n              displayPhotoMarkers={displayPhotoMarkers}\r\n              displayFavorites={displayFavorites}\r\n              screenWidth900px={useMinScreenWidth(900)}\r\n              openLightbox={openLightboxSinglePhoto}\r\n            />\r\n          </Suspense>\r\n        </section>\r\n\r\n        <div ref={resultsRef}></div>\r\n        {store.filteredPhotos && (\r\n          <ImageGrid\r\n            photos={store.filteredPhotos}\r\n            hiddenPhotos={store.hiddenPhotos}\r\n            responseDetails={responseDetails}\r\n            direction={smSceen ? \"column\" : gridDirection}\r\n            imageToggleFavorites={imageToggleFavorites}\r\n            openFavorites={openFavorites}\r\n            openLightbox={openLightbox}\r\n          />\r\n        )}\r\n\r\n        {responseDetails &&\r\n          responseDetails.currentPage < responseDetails.totalPages && (\r\n            <>\r\n              {loadingPhotos && <LoadingBar />}\r\n              <LoadMoreButton onClick={fetchNextPage} />\r\n            </>\r\n          )}\r\n      </Appbar>\r\n      <ModalGateway>\r\n        {viewerIsOpen &&\r\n          (history.location.pathname === \"/img-carousel/\" ||\r\n            history.location.pathname === \"/favorites/img-carousel/\") && (\r\n            <Modal\r\n              onClose={closeLightbox}\r\n              styles={{\r\n                blanket: blanketStyles,\r\n                positioner: imagePositionerStyles\r\n              }}\r\n            >\r\n              <Carousel\r\n                imageToggleFavorites={imageToggleFavorites}\r\n                components={{\r\n                  Header: LightBoxHeader,\r\n                  View: LightBoxViewRenderer\r\n                }}\r\n                currentIndex={currentImage}\r\n                views={\r\n                  // if viewerIsOpen has a .photo property then open a single photo,\r\n                  // else if favorites is open render favorites else render normal carousel\r\n                  viewerIsOpen.photo\r\n                    ? [\r\n                        {\r\n                          ...viewerIsOpen.photo,\r\n                          srcset: viewerIsOpen.photo.srcSet,\r\n                          caption: viewerIsOpen.photo.title\r\n                        }\r\n                      ]\r\n                    : openFavorites\r\n                    ? store.favorites.map(x => ({\r\n                        ...x,\r\n                        srcset: x.srcSet,\r\n                        caption: x.title\r\n                      }))\r\n                    : store.filteredPhotos.map(x => ({\r\n                        ...x,\r\n                        srcset: x.srcSet,\r\n                        caption: x.title\r\n                      }))\r\n                }\r\n                styles={{\r\n                  navigationPrev: navButtonStyles,\r\n                  navigationNext: navButtonStyles\r\n                }}\r\n              />\r\n            </Modal>\r\n          )}\r\n      </ModalGateway>\r\n      {openFavorites && history.location.pathname === \"/favorites/\" && (\r\n        <FavoritesDialog\r\n          openFavorites={openFavorites}\r\n          handleCloseFavorites={handleCloseFavorites}\r\n          responseDetails={responseDetails}\r\n          imageToggleFavorites={imageToggleFavorites}\r\n          openLightbox={openLightbox}\r\n        />\r\n      )}\r\n      {carouselOpen && (\r\n        <CarouselShowCase open={carouselOpen} closeCarousel={closeCarousel} />\r\n      )}\r\n      <Toast />\r\n      {!viewerIsOpen && <Redirect to=\"/\" />\r\n      // if the lightbox is closed redirect to '/'\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Store from \"./context/store\";\nimport QueryStore from \"./context/QueryContext/queryStore\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Store>\n      <QueryStore>\n        <CssBaseline />\n        <App />\n      </QueryStore>\n    </Store>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useReducer } from \"react\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport StateContext from \"./stateContext\";\r\nimport DispatchContext from \"./dispatchContext\";\r\n\r\nexport default function Store(props) {\r\n  const initialState = {\r\n    mapLoaded: false,\r\n    userLocation: null,\r\n    searchRadius: 3,\r\n    photos: null,\r\n    filteredPhotos: null,\r\n    hiddenPhotos: [],\r\n    favorites: [],\r\n    blockedUsers: [],\r\n    toast: { message: null, variant: null }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(rootReducer, initialState);\r\n\r\n  return (\r\n    <DispatchContext.Provider value={dispatch}>\r\n      <StateContext.Provider value={state}>\r\n        {props.children}\r\n      </StateContext.Provider>\r\n    </DispatchContext.Provider>\r\n  );\r\n}\r\n","import React, { useReducer } from \"react\";\r\n\r\nimport queryReducer from \"./queryReducer\";\r\nimport QueryContext from \"./queryContext\";\r\nimport DispatchQueryContext from \"./dispatchQueryContext\";\r\n\r\nexport default function Store(props) {\r\n  const initialState = {\r\n    /** currently no other searchMethod is implemented,\r\n     * \"CIRCLE\" or \"BOX\" could be used in the future */\r\n    searchMethod: \"EXTENTS\",\r\n    resultsPerPage: 30,\r\n    minUploadDate: false,\r\n    maxUploadDate: false,\r\n    minTakenDate: false,\r\n    maxTakenDate: false,\r\n    sortMethod: \"date-posted-desc\",\r\n    searchText: \"\"\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(queryReducer, initialState);\r\n\r\n  return (\r\n    <DispatchQueryContext.Provider value={dispatch}>\r\n      <QueryContext.Provider value={state}>\r\n        {props.children}\r\n      </QueryContext.Provider>\r\n    </DispatchQueryContext.Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}